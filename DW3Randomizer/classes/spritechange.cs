using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace DW3Randomizer
{ 
    public class spritechange
    {
        public void changeCats(ref byte[] romData, string txtSeed)
        {
            textchange textchange = new textchange();

            Random r2 = new Random(int.Parse(txtSeed));

            int index = r2.Next() % 10;

            byte[] dogSprite = { 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x1C, 0x18,
                                 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xF8, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x38, 0x18,
                                 0x1F, 0x3E, 0x3E, 0x3F, 0x3F, 0x1F, 0x0F, 0x17, 0x10, 0x23, 0x23, 0x21, 0x20, 0x13, 0x09, 0x19,
                                 0x38, 0x7C, 0x7C, 0xFC, 0xFC, 0xCC, 0x48, 0x30, 0xC8, 0xC4, 0xC4, 0x84, 0x24, 0xF4, 0x78, 0x30,
                                 0x00, 0x00, 0x00, 0x03, 0x07, 0x0F, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x03, 0x04, 0x0B, 0x14, 0x1A,
                                 0x00, 0x00, 0xC0, 0x20, 0xF0, 0xF8, 0xF8, 0xF8, 0x00, 0x00, 0xC0, 0xE0, 0x10, 0xC8, 0x28, 0x58,
                                 0x3F, 0x3D, 0x3C, 0x3C, 0x3E, 0x1F, 0x12, 0x0C, 0x3A, 0x33, 0x23, 0x27, 0x27, 0x13, 0x1E, 0x0C,
                                 0xFC, 0xBC, 0x3C, 0x3C, 0x78, 0xF0, 0xF0, 0x88, 0x5C, 0xCC, 0xC4, 0xE4, 0xC8, 0xD0, 0x90, 0xF8,
                                 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x7F, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x4F, 0x57,
                                 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70,
                                 0x9F, 0x1F, 0x8F, 0x7F, 0x0F, 0x07, 0x03, 0x02, 0xF7, 0xE7, 0xF0, 0x78, 0x08, 0x04, 0x02, 0x03,
                                 0xFC, 0xFA, 0xF9, 0xFD, 0xFE, 0xF8, 0xF0, 0x20, 0x8C, 0x0E, 0x0F, 0x07, 0x06, 0x88, 0x90, 0xE0,
                                 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x81,
                                 0x9F, 0x0F, 0xCF, 0x5F, 0x2F, 0x0F, 0x1F, 0x3C, 0xF3, 0xF1, 0xF0, 0x78, 0x28, 0x08, 0x13, 0x24,
                                 0xFE, 0xFC, 0xFD, 0xFE, 0xFF, 0xFF, 0x0D, 0x05, 0xFF, 0x87, 0x07, 0x02, 0x01, 0xF1, 0x0F, 0x07 };

            byte[] yetiSprite = { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0B, 0x07, 0x1F, 0x0F, 0x1F, 0x1F, 0x3F, 0x7F,
                                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD0, 0xE0, 0xF8, 0xF0, 0xF8, 0xF8, 0xFC, 0xFE,
                                  0x00, 0x00, 0x00, 0x60, 0x60, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xFF, 0x7F, 0x1F, 0x0F, 0x00,
                                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x50, 0xFF, 0xFF, 0xFE, 0xFC, 0xFC, 0xF8, 0xF0, 0x50,
                                  0x00, 0x00, 0x00, 0x02, 0x05, 0x02, 0x00, 0x06, 0x0B, 0x07, 0x1F, 0x0F, 0x1F, 0x1F, 0x3F, 0x7F,
                                  0x00, 0x00, 0x00, 0x40, 0xA0, 0x40, 0x00, 0x60, 0xD0, 0xE0, 0xF8, 0xF0, 0xF8, 0xF8, 0xFC, 0xFE,
                                  0x07, 0x63, 0x63, 0x03, 0x01, 0x00, 0x00, 0x00, 0xFF, 0xFE, 0x7E, 0x3E, 0x3F, 0x1F, 0x0F, 0x00,
                                  0xE0, 0xC0, 0xC0, 0xC6, 0x86, 0x00, 0xE0, 0x50, 0xFE, 0x7F, 0x7F, 0x7F, 0xFE, 0xF8, 0xF0, 0x50,
                                  0x00, 0x00, 0x00, 0x0C, 0x06, 0x0C, 0x00, 0x0C, 0x03, 0x07, 0x0F, 0x0F, 0x0F, 0x1F, 0x1F, 0x3F,
                                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE8, 0xF0, 0xFC, 0xF8, 0xFC, 0xF8, 0xFC, 0xFE,
                                  0x3C, 0x38, 0x70, 0x70, 0x60, 0x00, 0x07, 0x1F, 0x3F, 0x0F, 0x1F, 0x1F, 0x7F, 0x1F, 0x0F, 0x1F,
                                  0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFE, 0xFC, 0xFC, 0xF8, 0x80,
                                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE8, 0xF0, 0xFC, 0xF8, 0xFC, 0xF8, 0xFC, 0xFE,
                                  0x3C, 0x38, 0x70, 0x70, 0x60, 0x00, 0x00, 0x00, 0x3F, 0x0F, 0x1F, 0x1F, 0x7F, 0x1F, 0x0F, 0x00,
                                  0x60, 0x60, 0x00, 0x00, 0x00, 0x00, 0x38, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFE, 0xFC, 0xFC };

            byte[] tigerSprite = { 0x37, 0x3F, 0x3F, 0x1F, 0x3F, 0x3F, 0x3F, 0x1F, 0x37, 0x29, 0x29, 0x11, 0x2E, 0x31, 0x2E, 0x1B,
                                   0xEC, 0xFC, 0xFC, 0xF8, 0xFC, 0xFC, 0xFC, 0xF8, 0xEC, 0x94, 0x94, 0x88, 0x74, 0x8C, 0x74, 0xD8,
                                   0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0x1E, 0x00, 0x6F, 0x82, 0xFF, 0xA2, 0xF7, 0x23, 0x1E, 0x00,
                                   0xFF, 0xFF, 0xFF, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFF, 0x45, 0xFF, 0x44, 0xEC, 0xC4, 0x84, 0xFC,
                                   0x37, 0x3F, 0x3F, 0x1C, 0x31, 0x33, 0x3D, 0x1B, 0x37, 0x2E, 0x29, 0x17, 0x2F, 0x3F, 0x2F, 0x1F,
                                   0xEC, 0xFC, 0xFC, 0x38, 0x8C, 0xCC, 0xBC, 0xD8, 0xEC, 0x74, 0x94, 0xE8, 0xF4, 0xFC, 0xF4, 0xF8,
                                   0xFB, 0xFC, 0xFB, 0x38, 0x3C, 0x3D, 0x1E, 0x00, 0xFF, 0x97, 0xF7, 0x27, 0x33, 0x23, 0x1E, 0x00,
                                   0xDE, 0x3F, 0xDF, 0x1F, 0x3F, 0xBE, 0xFC, 0xFC, 0xF6, 0xE1, 0xEF, 0xE5, 0xC9, 0xCE, 0x84, 0xFC,
                                   0x0F, 0x7F, 0x7F, 0x03, 0x01, 0x19, 0x0F, 0x3B, 0x0F, 0x76, 0x63, 0x7C, 0x3F, 0x1F, 0x0E, 0x3C,
                                   0xD8, 0xF8, 0xF8, 0xF0, 0xF8, 0xFC, 0xFC, 0xF8, 0xD8, 0x48, 0xA8, 0x30, 0xD8, 0x94, 0x64, 0x38,
                                   0x7B, 0x67, 0x7F, 0x47, 0x4F, 0x4F, 0x3E, 0x3E, 0x7D, 0x5B, 0x71, 0x7F, 0x71, 0x7F, 0x22, 0x3E,
                                   0xF0, 0xFB, 0xFB, 0xFF, 0xFC, 0xF8, 0xC0, 0x00, 0x30, 0x2B, 0xAB, 0x3D, 0xB4, 0xB8, 0xC0, 0x00,
                                   0xD8, 0xF8, 0xF8, 0xF0, 0xF8, 0xFC, 0xFC, 0xF8, 0xD8, 0x48, 0xA8, 0x30, 0xD8, 0x94, 0x64, 0x38,
                                   0x1F, 0x27, 0x3F, 0x47, 0x4F, 0x4F, 0x3C, 0x00, 0x1C, 0x3E, 0x33, 0x7F, 0x70, 0x77, 0x3C, 0x00,
                                   0xF3, 0xFB, 0xFF, 0xFE, 0xFC, 0xF8, 0xF8, 0xF8, 0x33, 0x6B, 0xFD, 0x8A, 0x3C, 0x88, 0x98, 0xF8 };

            byte[] puppySprite = { 0x00, 0x0C, 0x1F, 0x1F, 0x1F, 0x07, 0x07, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
                                   0x00, 0x30, 0xF8, 0xF8, 0xF8, 0xE0, 0xE0, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
                                   0x0F, 0x0F, 0x07, 0x0F, 0x1F, 0x1F, 0x1B, 0x38, 0x03, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                   0xE0, 0xF4, 0xFC, 0xF8, 0xF8, 0xFC, 0xEC, 0x00, 0xE0, 0x14, 0x0C, 0xD8, 0x70, 0x00, 0x00, 0x00,
                                   0x00, 0x0C, 0x1F, 0x1F, 0x1F, 0x05, 0x05, 0x0F, 0x00, 0x00, 0x00, 0x04, 0x0C, 0x02, 0x02, 0x00,
                                   0x00, 0x30, 0xF8, 0xF8, 0xF8, 0xA0, 0xA0, 0xF0, 0x00, 0x00, 0x00, 0x20, 0x30, 0x40, 0x40, 0x00,
                                   0x0E, 0x2F, 0x3F, 0x1F, 0x1F, 0x1F, 0x1B, 0x38, 0x01, 0x20, 0x38, 0x17, 0x00, 0x00, 0x00, 0x00,
                                   0x70, 0xF0, 0xF0, 0xF8, 0xF8, 0xFC, 0xEC, 0x00, 0x80, 0x00, 0x10, 0xE0, 0x00, 0x00, 0x00, 0x00,
                                   0x00, 0x03, 0x03, 0x07, 0x1F, 0x17, 0x77, 0xFF, 0x00, 0x00, 0x01, 0x01, 0x00, 0x08, 0x08, 0x00,
                                   0x00, 0x00, 0x80, 0x80, 0x80, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
                                   0x7F, 0xFF, 0x7F, 0x07, 0x07, 0x03, 0x03, 0x01, 0x80, 0x01, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00,
                                   0xF8, 0xFE, 0xFF, 0xFD, 0xFC, 0x1C, 0xB8, 0xB0, 0x80, 0x02, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00,
                                   0x00, 0x00, 0x80, 0x80, 0x80, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
                                   0x7F, 0xFF, 0x7F, 0x07, 0x0F, 0x0D, 0x1C, 0x18, 0x80, 0x01, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00,
                                   0xF9, 0xFF, 0xFE, 0xFC, 0xFC, 0xFE, 0x1E, 0x06, 0x81, 0x03, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00 };

            byte[] foxSprite = { 0x00, 0x00, 0x00, 0x03, 0x07, 0x07, 0x0F, 0x1F, 0x00, 0x00, 0x00, 0x02, 0x06, 0x06, 0x0F, 0x1F,
                                 0x00, 0x00, 0x00, 0x40, 0xE0, 0xE0, 0xF0, 0xF8, 0x00, 0x00, 0x00, 0x40, 0x60, 0x60, 0xF0, 0xF8,
                                 0x0F, 0x03, 0x07, 0x0F, 0x0F, 0x06, 0x03, 0x07, 0x0F, 0x03, 0x07, 0x0F, 0x0F, 0x06, 0x03, 0x01,
                                 0xF0, 0xC0, 0xF0, 0xF8, 0xF8, 0x30, 0x30, 0x00, 0xF0, 0xC0, 0xF0, 0xF8, 0xF8, 0x00, 0x00, 0x00,
                                 0x00, 0x00, 0x02, 0x06, 0x06, 0x07, 0x0D, 0x1D, 0x00, 0x00, 0x02, 0x04, 0x04, 0x07, 0x0F, 0x1F,
                                 0x00, 0x00, 0x40, 0x60, 0x60, 0xE0, 0xB0, 0xB8, 0x00, 0x00, 0x40, 0x20, 0x20, 0xE0, 0xF0, 0xF8,
                                 0x0F, 0x03, 0x07, 0x0F, 0x0F, 0x06, 0x03, 0x07, 0x0C, 0x01, 0x06, 0x0F, 0x0F, 0x06, 0x03, 0x00,
                                 0xF0, 0xC0, 0xE0, 0xF0, 0xF0, 0x30, 0x60, 0x00, 0x30, 0x80, 0x60, 0xF0, 0xF0, 0x30, 0x00, 0x00,
                                 0x00, 0x00, 0x08, 0x0C, 0x0C, 0x1E, 0xAF, 0xEF, 0x00, 0x00, 0x08, 0x04, 0x04, 0x1E, 0x3F, 0xFF,
                                 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
                                 0x7F, 0x3F, 0x07, 0x03, 0x03, 0x01, 0x00, 0x01, 0x0F, 0x07, 0x07, 0x03, 0x03, 0x01, 0x00, 0x00,
                                 0xC7, 0xF7, 0xFF, 0xFE, 0xF8, 0xB0, 0x90, 0xB0, 0xC7, 0xF7, 0xFF, 0xFE, 0xF8, 0xB0, 0x00, 0x00,
                                 0x00, 0x00, 0x00, 0x02, 0x06, 0x06, 0x06, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x0E,
                                 0x7F, 0x1F, 0x17, 0x03, 0x03, 0x03, 0x06, 0x0C, 0x0F, 0x07, 0x07, 0x03, 0x03, 0x03, 0x00, 0x00,
                                 0x0E, 0xFE, 0xFE, 0xFC, 0xF8, 0x18, 0x04, 0x0C, 0x0E, 0xFE, 0xFE, 0xFC, 0xF8, 0x18, 0x00, 0x00 };

            byte[] dw4CatSprite = { 0x00, 0x00, 0x00, 0x02, 0x06, 0x07, 0x0F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
                                    0x00, 0x00, 0x00, 0x40, 0x60, 0xE0, 0xF0, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00,
                                    0x0F, 0x07, 0x0F, 0x1F, 0x1F, 0x0C, 0x0C, 0x00, 0x03, 0x04, 0x02, 0x04, 0x00, 0x00, 0x00, 0x00,
                                    0xF0, 0xC0, 0xE0, 0xF0, 0xF0, 0x60, 0xC0, 0xE0, 0xC0, 0x00, 0xC0, 0x20, 0x00, 0x00, 0x00, 0x00,
                                    0x00, 0x00, 0x00, 0x02, 0x06, 0x07, 0x0D, 0x1D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x0A,
                                    0x00, 0x00, 0x00, 0x40, 0x60, 0xE0, 0xB0, 0xB8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x40, 0x50,
                                    0x0E, 0x03, 0x07, 0x0F, 0x0F, 0x06, 0x03, 0x07, 0x01, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,
                                    0x70, 0xC0, 0xE0, 0xF0, 0xF0, 0x30, 0x60, 0x00, 0x80, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
                                    0x00, 0x00, 0x00, 0x08, 0x0C, 0x1E, 0x0F, 0x2F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x50,
                                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                    0x7F, 0x3F, 0x07, 0x03, 0x03, 0x03, 0x06, 0x0C, 0x0D, 0x02, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00,
                                    0x06, 0xF1, 0xF9, 0xFE, 0xF8, 0x18, 0x04, 0x0C, 0x00, 0xA0, 0xA0, 0xA0, 0x00, 0x00, 0x00, 0x00,
                                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                    0x7F, 0x3F, 0x07, 0x03, 0x03, 0x01, 0x00, 0x01, 0x0D, 0x02, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00,
                                    0xC0, 0xF6, 0xF9, 0xFE, 0xF8, 0xB0, 0x90, 0xB0, 0x40, 0x50, 0x90, 0x20, 0x00, 0x00, 0x00, 0x00 };

            byte[] lionSprite = { 0x27, 0x3F, 0x1F, 0x7F, 0x4F, 0x47, 0x6F, 0x27, 0x27, 0x3F, 0x1F, 0x7F, 0x7F, 0x7F, 0x7F, 0x3F,
                                  0xE4, 0xFC, 0xF8, 0xFE, 0xF2, 0xE2, 0xF6, 0xE4, 0xE4, 0xFC, 0xF8, 0xFE, 0xFE, 0xFE, 0xFE, 0xFC,
                                  0x4F, 0xA7, 0xA5, 0xA0, 0xE7, 0x21, 0x1E, 0x00, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0x1E, 0x00,
                                  0xFE, 0xEA, 0xAE, 0x08, 0xC8, 0x08, 0x08, 0xF8, 0xFE, 0xFE, 0xFE, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8,
                                  0x27, 0x3F, 0x19, 0x6E, 0x57, 0x37, 0x7A, 0x51, 0x27, 0x3F, 0x1F, 0x6F, 0x7D, 0x3C, 0x7F, 0x7F,
                                  0xE4, 0xFC, 0x98, 0x76, 0xEA, 0xEC, 0x5E, 0x8A, 0xE4, 0xFC, 0xF8, 0xF6, 0xBE, 0x3C, 0xFE, 0xFA,
                                  0x70, 0x99, 0x97, 0x63, 0x20, 0x21, 0x1E, 0x00, 0x7F, 0xFF, 0xFD, 0x7F, 0x3F, 0x3F, 0x1E, 0x00,
                                  0x0C, 0x9A, 0xEA, 0xD2, 0x12, 0x0C, 0x08, 0xF8, 0xFC, 0xFE, 0xBE, 0xFE, 0xFE, 0xFC, 0xF8, 0xF8,
                                  0x07, 0x0F, 0x0F, 0x03, 0x0D, 0x1E, 0x5E, 0x4F, 0x07, 0x0F, 0x0F, 0x0F, 0x1F, 0x1B, 0x73, 0x7C,
                                  0xEC, 0xF9, 0xFE, 0xFD, 0xFE, 0xE4, 0xE2, 0xF2, 0xEC, 0xF9, 0xFE, 0xFD, 0xFE, 0xFC, 0xFE, 0xFE,
                                  0x07, 0x1F, 0x3F, 0x08, 0x10, 0x10, 0x08, 0x0F, 0x78, 0x21, 0x1F, 0x0F, 0x1F, 0x1F, 0x0F, 0x0F,
                                  0xFA, 0x94, 0x12, 0x92, 0x92, 0xE4, 0xBC, 0x80, 0xFE, 0xFC, 0xFE, 0xFE, 0xFE, 0xFC, 0xBC, 0x80,
                                  0xEC, 0xF9, 0xFE, 0xFD, 0xFE, 0xE4, 0xE2, 0xF2, 0xEC, 0xF9, 0xFE, 0xFD, 0xFE, 0xFC, 0xFE, 0xFE,
                                  0x06, 0x1E, 0x3F, 0x09, 0x10, 0x10, 0x0F, 0x00, 0x7B, 0x23, 0x1F, 0x0F, 0x1F, 0x1F, 0x0F, 0x00,
                                  0x7A, 0x14, 0x12, 0xE2, 0x02, 0xC2, 0x44, 0x7C, 0xFE, 0xFC, 0xFE, 0xFE, 0xFE, 0xFE, 0x7C, 0x7C };

            byte[] dinoSprite = { 0x30, 0x1B, 0x1B, 0x1D, 0x0D, 0x0E, 0x06, 0x07, 0x7B, 0x3F, 0x2F, 0x2F, 0x17, 0x17, 0x0B, 0x1B,
                                  0x00, 0x60, 0xF0, 0x70, 0x78, 0xF8, 0xF8, 0x7E, 0xE0, 0xF0, 0xF8, 0xF8, 0xFC, 0xFC, 0xFE, 0xFF,
                                  0x17, 0x3B, 0x6B, 0x7D, 0x1F, 0x0C, 0x1C, 0x00, 0x39, 0x7C, 0xFC, 0xFE, 0x7E, 0x1F, 0x3E, 0x3C,
                                  0xBE, 0xD8, 0xE8, 0xE8, 0xDC, 0xDC, 0x30, 0x3C, 0xFF, 0xFE, 0x7C, 0x7C, 0x3E, 0x3E, 0xFC, 0x7E,
                                  0x60, 0x36, 0x2F, 0x2E, 0x1E, 0x1B, 0x0F, 0x05, 0xF7, 0x7F, 0x7F, 0x7F, 0x33, 0x37, 0x7F, 0x1F,
                                  0x00, 0xC0, 0xE0, 0xE0, 0xF0, 0xB0, 0xE0, 0x40, 0xC0, 0xE0, 0xF0, 0xF0, 0x98, 0xD8, 0xF0, 0xF8,
                                  0x7B, 0x1C, 0x1F, 0x3F, 0x3F, 0x1B, 0x38, 0x00, 0xFF, 0x7F, 0x3C, 0x78, 0x78, 0x3C, 0x7F, 0x78,
                                  0xB8, 0x7C, 0xF6, 0xF6, 0xF8, 0xB8, 0x60, 0x78, 0xFC, 0xFE, 0x7F, 0x3F, 0x3E, 0x7C, 0xF8, 0xFC,
                                  0x00, 0x1E, 0x3D, 0x37, 0x3F, 0x7F, 0xB9, 0xF5, 0x1E, 0x3F, 0x67, 0x6F, 0x7F, 0xE3, 0xC7, 0xCF,
                                  0x03, 0x06, 0x06, 0x8E, 0x8E, 0x8E, 0x0E, 0x0E, 0x06, 0x0D, 0x8D, 0xDD, 0xDD, 0xDD, 0x9D, 0xDD,
                                  0xFB, 0x16, 0x0D, 0x08, 0x0B, 0x07, 0x06, 0x1E, 0x9F, 0xFB, 0x17, 0x17, 0x17, 0x0F, 0x1F, 0x3F,
                                  0xDE, 0xBE, 0xBE, 0x7C, 0xD8, 0x60, 0xE0, 0x00, 0xFD, 0xFD, 0xFD, 0xFA, 0xE4, 0xF8, 0xF0, 0xE0,
                                  0x03, 0x06, 0x06, 0x8E, 0x8E, 0x8E, 0x0E, 0x0E, 0x06, 0x0D, 0x8D, 0xDD, 0xDD, 0xDD, 0x9D, 0xDD,
                                  0xE6, 0x03, 0x0C, 0x0B, 0x0B, 0x07, 0x01, 0x0F, 0x9F, 0xFF, 0x17, 0x17, 0x17, 0x0F, 0x0F, 0x1F,
                                  0xDE, 0xFE, 0xFE, 0x7C, 0xD8, 0x80, 0x80, 0x80, 0xFD, 0xFD, 0xFD, 0xFA, 0xE4, 0xF8, 0xC0, 0xC0 };

            byte[] gbaAniSprite = { 0x00, 0x10, 0x1A, 0x04, 0x0E, 0x04, 0x08, 0x06, 0x30, 0x3B, 0x2F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F,
                                    0x00, 0x08, 0x58, 0x20, 0x70, 0x20, 0x10, 0x60, 0x0C, 0xDC, 0xF4, 0xFC, 0xF8, 0xF8, 0xF8, 0xF8,
                                    0x1C, 0x7E, 0x28, 0x0E, 0x08, 0x0E, 0x0E, 0x06, 0x7F, 0xBF, 0xFF, 0x3F, 0x1F, 0x1F, 0x1F, 0x09,
                                    0x38, 0x3C, 0x5C, 0x50, 0x50, 0xB0, 0x60, 0x00, 0xFC, 0xFE, 0xBA, 0xFE, 0xF8, 0xF8, 0xF0, 0xE0,
                                    0x00, 0x20, 0x34, 0x08, 0x1C, 0x08, 0x1B, 0x0C, 0x60, 0x77, 0x5F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3B,
                                    0x00, 0x10, 0xB0, 0x40, 0xE0, 0x40, 0x60, 0xC0, 0x18, 0xB8, 0xE8, 0xF0, 0xF0, 0xF0, 0xF0, 0x70,
                                    0x27, 0x78, 0x6B, 0x1C, 0x1F, 0x1F, 0x0D, 0x00, 0x78, 0xFF, 0xB4, 0xF3, 0x30, 0x38, 0x1F, 0x0F,
                                    0x90, 0x7C, 0x68, 0xE0, 0xE0, 0xE0, 0xE0, 0xC0, 0x7C, 0xFA, 0xBC, 0x38, 0x30, 0x70, 0xF0, 0x20,
                                    0x00, 0x00, 0x02, 0x05, 0x0F, 0x0F, 0x1E, 0x0F, 0x00, 0x07, 0x0F, 0x1F, 0x1F, 0x3F, 0x3F, 0x33,
                                    0x00, 0x40, 0xC0, 0x80, 0xE0, 0xC0, 0xE0, 0xC0, 0x60, 0xE0, 0xA0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0,
                                    0x1C, 0x00, 0x35, 0x0D, 0x18, 0x17, 0x0E, 0x0C, 0x23, 0x3F, 0x4B, 0x73, 0x27, 0x2F, 0x1F, 0x13,
                                    0x80, 0x68, 0x8C, 0xC4, 0xCC, 0x28, 0xC0, 0x00, 0xF8, 0xF4, 0xFE, 0xFE, 0x3E, 0xFC, 0xF8, 0xE0,
                                    0x00, 0x40, 0xC0, 0x80, 0xE0, 0xC0, 0xE0, 0xC0, 0x60, 0xE0, 0xA0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0,
                                    0x1C, 0x00, 0x35, 0x0B, 0x1B, 0x18, 0x0D, 0x00, 0x23, 0x3F, 0x4B, 0x75, 0x25, 0x27, 0x13, 0x1F,
                                    0xF8, 0x64, 0x84, 0xAC, 0x48, 0xE8, 0xE0, 0xC0, 0xFE, 0xFA, 0xFE, 0xFE, 0xFC, 0xFC, 0xF8, 0x20 };

            // index == 0 uses default sprite

            if (index == 1)
            {
                for (int lni = 0; lni < dogSprite.Length; lni++)
                    romData[0x23060 + lni] = dogSprite[lni];
                textchange.convertStrToHex("Woof", 0x46a58, false, ref romData);
                textchange.convertStrToHex("Woof", 0x514cb, false, ref romData);
                textchange.convertStrToHex("Woof", 0x52dd7, false, ref romData);
                textchange.convertStrToHex("Woof", 0x52e1f, false, ref romData);
                textchange.convertStrToHex("Woof", 0x55e59, false, ref romData);
            }

            else if (index == 2)
            {
                for (int lni = 0; lni < yetiSprite.Length; lni++)
                    romData[0x23060 + lni] = yetiSprite[lni];
                textchange.convertStrToHex("Roar", 0x46a58, false, ref romData);
                textchange.convertStrToHex("Roar", 0x514cb, false, ref romData);
                textchange.convertStrToHex("Roar", 0x52dd7, false, ref romData);
                textchange.convertStrToHex("Roar", 0x52e1f, false, ref romData);
                textchange.convertStrToHex("Roar", 0x55e59, false, ref romData);
            }
            else if (index == 3)
            {
                for (int lni = 0; lni < tigerSprite.Length; lni++)
                    romData[0x23060 + lni] = tigerSprite[lni];
                textchange.convertStrToHex("Grrr", 0x46a58, false, ref romData);
                textchange.convertStrToHex("Grrr", 0x514cb, false, ref romData);
                textchange.convertStrToHex("Grrr", 0x52dd7, false, ref romData);
                textchange.convertStrToHex("Grrr", 0x52e1f, false, ref romData);
                textchange.convertStrToHex("Grrr", 0x55e59, false, ref romData);
            }
            else if (index == 4)
            {
                for (int lni = 0; lni < puppySprite.Length; lni++)
                    romData[0x23060 + lni] = puppySprite[lni];
                textchange.convertStrToHex("Woof", 0x46a58, false, ref romData);
                textchange.convertStrToHex("Woof", 0x514cb, false, ref romData);
                textchange.convertStrToHex("Woof", 0x52dd7, false, ref romData);
                textchange.convertStrToHex("Woof", 0x52e1f, false, ref romData);
                textchange.convertStrToHex("Woof", 0x55e59, false, ref romData);
            }
            else if (index == 5)
            {
                for (int lni = 0; lni < foxSprite.Length; lni++)
                    romData[0x23060 + lni] = foxSprite[lni];
                romData[0x46a58] = romData[0x514cb] = romData[0x52dd7] = romData[0x52e1f] = romData[0x55e59] = 0x27; // C
                romData[0x46a59] = romData[0x514cc] = romData[0x52dd8] = romData[0x52e20] = romData[0x55e5a] = 0x12; // h
                romData[0x46a5a] = romData[0x514cd] = romData[0x52dd9] = romData[0x52e21] = romData[0x55e5b] = 0x0b; // a
                romData[0x46a5b] = romData[0x514ce] = romData[0x52dda] = romData[0x52e22] = romData[0x55e5c] = 0x1e; // t
                textchange.convertStrToHex("Chat", 0x46a58, false, ref romData);
                textchange.convertStrToHex("Chat", 0x514cb, false, ref romData);
                textchange.convertStrToHex("Chat", 0x52dd7, false, ref romData);
                textchange.convertStrToHex("Chat", 0x52e1f, false, ref romData);
                textchange.convertStrToHex("Chat", 0x55e59, false, ref romData);
            }
            else if (index == 6)
            {
                for (int lni = 0; lni < dw4CatSprite.Length; lni++)
                    romData[0x23060 + lni] = dw4CatSprite[lni];
                textchange.convertStrToHex("Prrr", 0x46a58, false, ref romData);
                textchange.convertStrToHex("Prrr", 0x514cb, false, ref romData);
                textchange.convertStrToHex("Prrr", 0x52dd7, false, ref romData);
                textchange.convertStrToHex("Prrr", 0x52e1f, false, ref romData);
                textchange.convertStrToHex("Prrr", 0x55e59, false, ref romData);
            }
            else if (index == 7)
            {
                for (int lni = 0; lni < lionSprite.Length; lni++)
                    romData[0x23060 + lni] = lionSprite[lni];
                textchange.convertStrToHex("Roar", 0x46a58, false, ref romData);
                textchange.convertStrToHex("Roar", 0x514cb, false, ref romData);
                textchange.convertStrToHex("Roar", 0x52dd7, false, ref romData);
                textchange.convertStrToHex("Roar", 0x52e1f, false, ref romData);
                textchange.convertStrToHex("Roar", 0x55e59, false, ref romData);
            }
            else if (index == 8)
            {
                for (int lni = 0; lni < dinoSprite.Length; lni++)
                    romData[0x23060 + lni] = dinoSprite[lni];
                textchange.convertStrToHex("Roar", 0x46a58, false, ref romData);
                textchange.convertStrToHex("Roar", 0x514cb, false, ref romData);
                textchange.convertStrToHex("Roar", 0x52dd7, false, ref romData);
                textchange.convertStrToHex("Roar", 0x52e1f, false, ref romData);
                textchange.convertStrToHex("Roar", 0x55e59, false, ref romData);
            }
            else if (index == 9)
            {
                for (int lni = 0; lni < gbaAniSprite.Length; lni++)
                    romData[0x23060 + lni] = gbaAniSprite[lni];
                textchange.convertStrToHex("Roar", 0x46a58, false, ref romData);
                textchange.convertStrToHex("Roar", 0x514cb, false, ref romData);
                textchange.convertStrToHex("Roar", 0x52dd7, false, ref romData);
                textchange.convertStrToHex("Roar", 0x52e1f, false, ref romData);
                textchange.convertStrToHex("Roar", 0x55e59, false, ref romData);
            }

        }

        public void changeGhostToCasket(ref byte[] romData, string txtSeed, bool randColor)
        {
            textchange textchange = new textchange();

            // Changes ghost sprite to casket
            byte[] caskettop1_green = { 0x00, 0x00, 0x00, 0x07, 0x0f, 0x1f, 0x3f, 0x7f, 0x00, 0x00, 0x07, 0x0f, 0x18, 0x30, 0x63, 0xc3,
                                        0x00, 0x00, 0x00, 0x80, 0xf0, 0xfe, 0xfe, 0xfe, 0x00, 0x00, 0x80, 0xf0, 0x7e, 0x0f, 0x03, 0x03};
            byte[] caskettop2_green = { 0x3f, 0x5f, 0x2f, 0x17, 0x08, 0x07, 0x00, 0x00, 0xe0, 0xf0, 0x78, 0x3f, 0x1f, 0x0f, 0x07, 0x00,
                                        0xfe, 0xfe, 0xf0, 0x8e, 0x70, 0x80, 0x00, 0x00, 0x03, 0x0f, 0x7f, 0xff, 0xfe, 0xf0, 0x80, 0x00};// 0x21d80
            byte[] casketbottom1_green = { 0x00, 0x01, 0x03, 0x07, 0x0f, 0x1f, 0x1f, 0x1f, 0x01, 0x03, 0x06, 0x0c, 0x18, 0x31, 0x31, 0x30,
                                           0x00, 0x80, 0xc0, 0xe0, 0xf0, 0xf8, 0xf8, 0xf8, 0x80, 0xc0, 0x60, 0x30, 0x18, 0x8c, 0x8c, 0x0c,
                                           0x2f, 0x2f, 0x0f, 0x17, 0x17, 0x10, 0x07, 0x00, 0x38, 0x38, 0x18, 0x1c, 0x1f, 0x1f, 0x0f, 0x07,
                                           0xf4, 0xf4, 0xf0, 0xe8, 0xe8, 0x08, 0xe0, 0x00, 0x1c, 0x1c, 0x18, 0x38, 0xf8, 0xf8, 0xf0, 0xe0};
            byte[] casketbottom2_green = { 0x00, 0x07, 0x10, 0x17, 0x17, 0x0f, 0x2f, 0x2f, 0x07, 0x0f, 0x1f, 0x1f, 0x1c, 0x18, 0x38, 0x38,
                                           0x00, 0xe0, 0x08, 0xe8, 0xe8, 0xf0, 0xf4, 0xf4, 0xe0, 0xf0, 0xf8, 0xf8, 0x38, 0x18, 0x1c, 0x1c,
                                           0x1f, 0x1f, 0x1f, 0x0f, 0x07, 0x03, 0x01, 0x00, 0x30, 0x31, 0x31, 0x18, 0x0c, 0x06, 0x03, 0x01,
                                           0xf8, 0xf8, 0xf8, 0xf0, 0xe0, 0xc0, 0x80, 0x00, 0x0c, 0x8c, 0x8c, 0x18, 0x30, 0x60, 0xc0, 0x80};
            byte[] caskettop1_white = { 0x00, 0x00, 0x07, 0x08, 0x17, 0x2f, 0x5c, 0xbc, 0x00, 0x00, 0x00, 0x07, 0x0f, 0x1f, 0x3f, 0x7f,
                                        0x00, 0x00, 0x80, 0x70, 0x8e, 0xf1, 0xfd, 0xfd, 0x00, 0x00, 0x00, 0x80, 0xf0, 0xfe, 0xfe, 0xfe};
            byte[] caskettop2_white = { 0xdf, 0xaf, 0x57, 0x28, 0x17, 0x08, 0x07, 0x00, 0x3f, 0x5f, 0x2f, 0x17, 0x08, 0x07, 0x00, 0x00,
                                        0xfd, 0xf1, 0x8f, 0x71, 0x8e, 0x70, 0x80, 0x00, 0xfe, 0xfe, 0xf0, 0x8e, 0x70, 0x80, 0x00, 0x00};
            byte[] casketbottom1_white = { 0x01, 0x02, 0x05, 0x0b, 0x17, 0x2e, 0x2e, 0x2f, 0x00, 0x01, 0x03, 0x07, 0x0f, 0x1f, 0x1f, 0x1f,
                                           0x80, 0x40, 0xa0, 0xd0, 0xe8, 0x74, 0x74, 0xf4, 0x00, 0x80, 0xc0, 0xe0, 0xf0, 0xf8, 0xf8, 0xf8,
                                           0x17, 0x17, 0x17, 0x0b, 0x08, 0x0f, 0x08, 0x07, 0x2f, 0x2f, 0x0f, 0x17, 0x17, 0x10, 0x07, 0x00,
                                           0xe8, 0xe8, 0xe8, 0xd0, 0x10, 0xf0, 0x10, 0xe0, 0xf4, 0xf4, 0xf0, 0xe8, 0xe8, 0x08, 0xe0, 0x00};
            byte[] casketbottom2_white = { 0x07, 0x08, 0x0f, 0x08, 0x0b, 0x17, 0x17, 0x17, 0x00, 0x07, 0x10, 0x17, 0x17, 0x0f, 0x2f, 0x2f,
                                           0xe0, 0x10, 0xf0, 0x10, 0xd0, 0xe8, 0xe8, 0xe8, 0x00, 0xe0, 0x08, 0xe8, 0xe8, 0xf0, 0xf4, 0xf4,
                                           0x2f, 0x2e, 0x2e, 0x17, 0x0b, 0x05, 0x02, 0x01, 0x1f, 0x1f, 0x1f, 0x0f, 0x07, 0x03, 0x01, 0x00,
                                           0xf4, 0x74, 0x74, 0xe8, 0xd0, 0xa0, 0x40, 0x80, 0xf8, 0xf8, 0xf8, 0xf0, 0xe0, 0xc0, 0x80, 0x00};
            byte[] caskettop1_blue = { 0x00, 0x00, 0x07, 0x0f, 0x18, 0x30, 0x63, 0xc3, 0x00, 0x00, 0x07, 0x08, 0x17, 0x2f, 0x5c, 0xbc,
                                       0x00, 0x00, 0x80, 0xf0, 0x7e, 0x0f, 0x03, 0x03, 0x00, 0x00, 0x80, 0x70, 0x8e, 0xf1, 0xfd, 0xfd};
            byte[] caskettop2_blue = { 0xe0, 0xf0, 0x78, 0x3f, 0x1f, 0x0f, 0x07, 0x00, 0xdf, 0xaf, 0x57, 0x28, 0x17, 0x08, 0x07, 0x00,
                                       0x03, 0x0f, 0x7f, 0xff, 0xfe, 0xf0, 0x80, 0x00, 0xfd, 0xf1, 0x8f, 0x71, 0x8e, 0x70, 0x80, 0x00};
            byte[] casketbottom1_blue = { 0x01, 0x03, 0x06, 0x0c, 0x18, 0x31, 0x31, 0x30, 0x01, 0x02, 0x05, 0x0b, 0x17, 0x2e, 0x2e, 0x2f,
                                          0x80, 0xc0, 0x60, 0x30, 0x18, 0x8c, 0x8c, 0x0c, 0x80, 0x40, 0xa0, 0xd0, 0xe8, 0x74, 0x74, 0xf4,
                                          0x38, 0x38, 0x18, 0x1c, 0x1f, 0x1f, 0x0f, 0x07, 0x17, 0x17, 0x17, 0x0b, 0x08, 0x0f, 0x08, 0x07,
                                          0x1c, 0x1c, 0x18, 0x38, 0xf8, 0xf8, 0xf0, 0xe0, 0xe8, 0xe8, 0xe8, 0xd0, 0x10, 0xf0, 0x10, 0xe0};
            byte[] casketbottom2_blue = { 0x07, 0x0f, 0x1f, 0x1f, 0x1c, 0x18, 0x38, 0x38, 0x07, 0x08, 0x0f, 0x08, 0x0b, 0x17, 0x17, 0x17,
                                          0xe0, 0xf0, 0xf8, 0xf8, 0x38, 0x18, 0x1c, 0x1c, 0xe0, 0x10, 0xf0, 0x10, 0xd0, 0xe8, 0xe8, 0xe8,
                                          0x30, 0x31, 0x31, 0x18, 0x0c, 0x06, 0x03, 0x01, 0x2f, 0x2e, 0x2e, 0x17, 0x0b, 0x05, 0x02, 0x01,
                                          0x0c, 0x8c, 0x8c, 0x18, 0x30, 0x60, 0xc0, 0x80, 0xf4, 0x74, 0x74, 0xe8, 0xd0, 0xa0, 0x40, 0x80};

            List<byte> caskettop1 = new List<byte>();
            List<byte> caskettop2 = new List<byte>();
            List<byte> casketbottom1 = new List<byte>();
            List<byte> casketbottom2 = new List<byte>();

            int colorpick = 0;

            Random r2 = new Random(int.Parse(txtSeed));

            if (randColor) colorpick = r2.Next() % 3;

            if (colorpick == 0)
            {
                for (int lni = 0; lni < caskettop1_green.Length; lni++)
                    caskettop1.Add(caskettop1_green[lni]);
                for (int lni = 0; lni < caskettop2_green.Length; lni++)
                    caskettop2.Add(caskettop2_green[lni]);
                for (int lni = 0; lni < casketbottom1_green.Length; lni++)
                    casketbottom1.Add(casketbottom1_green[lni]);
                for (int lni = 0; lni < casketbottom2_green.Length; lni++)
                    casketbottom2.Add(casketbottom2_green[lni]);
            }
            else if (colorpick == 1)
            {
                for (int lni = 0; lni < caskettop1_white.Length; lni++)
                    caskettop1.Add(caskettop1_white[lni]);
                for (int lni = 0; lni < caskettop2_white.Length; lni++)
                    caskettop2.Add(caskettop2_white[lni]);
                for (int lni = 0; lni < casketbottom1_white.Length; lni++)
                    casketbottom1.Add(casketbottom1_white[lni]);
                for (int lni = 0; lni < casketbottom2_white.Length; lni++)
                    casketbottom2.Add(casketbottom2_white[lni]);
            }
            else
            {
                for (int lni = 0; lni < caskettop1_blue.Length; lni++)
                    caskettop1.Add(caskettop1_blue[lni]);
                for (int lni = 0; lni < caskettop2_blue.Length; lni++)
                    caskettop2.Add(caskettop2_blue[lni]);
                for (int lni = 0; lni < casketbottom1_blue.Length; lni++)
                    casketbottom1.Add(casketbottom1_blue[lni]);
                for (int lni = 0; lni < casketbottom2_blue.Length; lni++)
                    casketbottom2.Add(casketbottom2_blue[lni]);
            }

            for (int lni = 0; lni < caskettop1.Count; lni++)
                romData[0x21d80 + lni] = caskettop1[lni];
            for (int lni = 0; lni < caskettop2.Count; lni++)
                romData[0x21da0 + lni] = romData[0x21dc0 + lni] = caskettop2[lni];
            for (int lni = 0; lni < casketbottom1.Count; lni++)
                romData[0x22c20 + lni] = casketbottom1[lni];
            for (int lni = 0; lni < casketbottom2.Count; lni++)
                romData[0x22ba0 + lni] = romData[0x22be0 + lni] = casketbottom2[lni];

            // changes references from ghost to pall (synonym for casket).
            textchange.convertStrToHex("pall and throws it away. ", 0x424f1, false, ref romData);
            textchange.convertStrToHex("puts the < into [^s pall.", 0x4255f, false, ref romData);
            textchange.convertStrToHex(" into [^s pall.", 0x42569, false, ref romData);
            textchange.convertStrToHex("puts it into [^s pall.", 0x425fb, false, ref romData);
            textchange.convertStrToHex("pall. ", 0x42629, false, ref romData);
            textchange.convertStrToHex("pall and puts it in [^s Tool Bag. ", 0x42647, false, ref romData);
            textchange.convertStrToHex("pall and puts it into [^s pall. ", 0x42681, false, ref romData);
            textchange.convertStrToHex("pall and returns it to [^s pall.  ", 0x4272b, false, ref romData);
            textchange.convertStrToHex("pall and places the < in it. ", 0x42901, false, ref romData);
            textchange.convertStrToHex("put it into this pall", 0x450c6, false, ref romData);
            romData[0x450db] = 0x69;
            romData[0x450dc] = 0x60;
            romData[0x450dd] = 0xef;
            textchange.convertStrToHex("put it into this pall", 0x452c9, false, ref romData);

        }

        public byte[] fixFFigherSprite(ref byte[] romData)
        {
            romData[0x16f25] = 0x5d;
            romData[0x16f26] = 0x80;
            romData[0x16f27] = 0x55;

            return romData;
        }

        public void invisibleNPCs(ref byte[] romData)
        {
            for (int lni = 0; lni < 32; lni++)
                romData[0x1fff0 + lni] = 0x00;
            for (int lni = 0; lni < (16 * 16 * 5); lni++)
                romData[0x21880 + lni] = 0x00;
            for (int lni = 0; lni < (16 * 16 * 3) + (7 * 16); lni++)
                romData[0x21de0 + lni] = 0x00;
            for (int lni = 0; lni < (16 * 16 * 9) + (1 * 16); lni++)
                romData[0x22290 + lni] = 0x00;
            for (int lni = 0; lni < (16 * 16 * 9) + (9 * 16); lni++)
                romData[0x22c60 + lni] = 0x00;
            for (int lni = 0; lni < (16 * 16 * 4) + (16 * 1); lni++)
                romData[0x23610 + lni] = 0x00;
            for (int lni = 0; lni < (16 * 16) + (14 * 16); lni++)
                romData[0x23af0 + lni] = 0x00;
        }

        public void invisbleShips(ref byte[] romData)
        {
            for (int lni = 0; lni < (16 * 16) * 20; lni++)
                romData[0x22150 + lni] = 0x00;
            for (int lni = 0; lni < 32; lni++)
                romData[0x235f0 + lni] = 0x00;
            for (int lni = 0; lni < (16 * 16) * 13; lni++)
                romData[0x23a20 + lni] = 0x00;
        }

        public void randomNPCSprites(ref byte[] romData, string txtSeed)
        {
            byte[] dw1MerchantSprite = { 0x00, 0x00, 0x00, 0x18, 0x07, 0x10, 0x08, 0x07, 0x07, 0x0F, 0x1F, 0x1F, 0x1F, 0x0F, 0x07, 0x38,
                                         0x40, 0xC0, 0xC0, 0xFF, 0x00, 0x00, 0x1E, 0x00, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x1F, 0x1E, 0x00,
                                         0x03, 0x03, 0x02, 0xFC, 0x00, 0x00, 0xF8, 0xF8, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xF8, 0x00, 0xF8,
                                         0x00, 0x00, 0x07, 0x18, 0x05, 0x1D, 0x0E, 0x0D, 0x07, 0x0F, 0x1F, 0x1F, 0x1A, 0x02, 0x01, 0x02,
                                         0xC0, 0xC1, 0x40, 0x3D, 0x00, 0x00, 0x1E, 0x00, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x1F, 0x1E, 0x00,
                                         0x02, 0x87, 0x0F, 0xBE, 0x00, 0x00, 0xF8, 0xF8, 0xFC, 0xF8, 0xF0, 0xF0, 0xFC, 0xF8, 0x00, 0xF8,
                                         0x00, 0x00, 0x1E, 0x01, 0x0A, 0x1B, 0x07, 0x0A, 0x07, 0x0F, 0x1F, 0x1F, 0x05, 0x04, 0x08, 0x05,
                                         0x00, 0x00, 0x00, 0xC0, 0x38, 0x80, 0x00, 0x60, 0xE0, 0xF0, 0xF8, 0xF8, 0xF8, 0x78, 0xF0, 0x80,
                                         0x01, 0x21, 0x00, 0x2F, 0x01, 0x00, 0x1F, 0x1F, 0x1E, 0x3E, 0x3F, 0x3E, 0x3E, 0x1F, 0x00, 0x1F,
                                         0xC0, 0xE0, 0xE0, 0xF8, 0xC0, 0x00, 0xF0, 0x00, 0x30, 0x18, 0x18, 0x18, 0x38, 0xF0, 0xF0, 0x00,
                                         0x0D, 0x2F, 0x07, 0x2F, 0x00, 0x00, 0x1F, 0x01, 0x12, 0x30, 0x38, 0x3F, 0x3F, 0x1F, 0x1E, 0x01,
                                         0x80, 0x80, 0x80, 0xF8, 0x00, 0x00, 0xF0, 0xF0, 0x70, 0x78, 0x78, 0xF8, 0xF8, 0xF0, 0x00, 0xF0 };
            byte[] dw2MerchantSprite = { 0x07, 0x07, 0x0F, 0x0F, 0x0F, 0x0F, 0x20, 0x40, 0x07, 0x07, 0x0F, 0x0F, 0x0F, 0x00, 0x3F, 0x7F,
                                         0xC0, 0xC0, 0xC0, 0x3F, 0x00, 0x00, 0x1E, 0x00, 0xFF, 0x7F, 0x3F, 0x3F, 0x3F, 0x3F, 0x00, 0x1E,
                                         0x03, 0x03, 0x07, 0xFE, 0x00, 0x78, 0x00, 0x00, 0xFF, 0xFF, 0xF8, 0xF8, 0xFC, 0x00, 0x78, 0x00,
                                         0x00, 0x00, 0x00, 0x05, 0x0F, 0x0C, 0x20, 0x41, 0x07, 0x07, 0x0F, 0x0A, 0x00, 0x03, 0x3F, 0x7E,
                                         0xC0, 0xC1, 0xC0, 0x3F, 0x00, 0x00, 0x1E, 0x00, 0xFF, 0x7E, 0x3F, 0x3E, 0x3F, 0x3F, 0x00, 0x1E,
                                         0x03, 0x83, 0x07, 0xFE, 0x00, 0x78, 0x00, 0x00, 0xFF, 0x7F, 0xF8, 0x78, 0xFC, 0x00, 0x78, 0x00,
                                         0x00, 0x00, 0x00, 0x05, 0x07, 0x01, 0x00, 0x08, 0x07, 0x07, 0x0F, 0x02, 0x00, 0x06, 0x0F, 0x07,
                                         0x00, 0x00, 0x00, 0x80, 0xC0, 0xF0, 0x00, 0x60, 0xF0, 0xF0, 0xF8, 0x78, 0x38, 0x00, 0xF8, 0xFC,
                                         0x00, 0x18, 0x01, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x07, 0x1E, 0x07, 0x1F, 0x0F, 0x1E, 0x00,
                                         0xE0, 0xE0, 0xC0, 0xFC, 0x00, 0x00, 0x78, 0x00, 0xFC, 0xFC, 0x3C, 0x3C, 0xFC, 0xF8, 0x00, 0xF8,
                                         0x00, 0x18, 0x00, 0x1F, 0x00, 0x00, 0x01, 0x00, 0x1F, 0x07, 0x1F, 0x07, 0x1F, 0x0F, 0x00, 0x03,
                                         0x70, 0x30, 0x70, 0xFC, 0x00, 0x00, 0xE0, 0x00, 0xFC, 0xFC, 0x8C, 0xCC, 0xFC, 0xFC, 0x18, 0xE0 };
            byte[] dw4Taloon = { 0x00, 0x00, 0x10, 0x38, 0x1F, 0x3F, 0x3C, 0x7F, 0x07, 0x0F, 0x1F, 0x37, 0x17, 0x34, 0x13, 0x50,
                                 0xDD, 0xDD, 0xFD, 0x6F, 0x3F, 0x3F, 0x1F, 0x00, 0xE2, 0xF7, 0xE2, 0x50, 0x3F, 0x0A, 0x0A, 0x00,
                                 0xBB, 0xBB, 0xBE, 0xF4, 0xFC, 0xFC, 0xFC, 0x78, 0x47, 0xEF, 0x46, 0x08, 0xFC, 0xA8, 0xF8, 0x00,
                                 0x00, 0x05, 0x1F, 0x3F, 0x1F, 0x3F, 0x2F, 0x6F, 0x07, 0x0F, 0x1F, 0x3D, 0x1A, 0x3A, 0x11, 0x5B,
                                 0xF7, 0xF3, 0xE3, 0x03, 0x3F, 0x3F, 0x1F, 0x00, 0x9C, 0x9F, 0xFE, 0x3E, 0x3E, 0x0A, 0x0A, 0x00,
                                 0xE7, 0xEF, 0xEE, 0xE0, 0xFC, 0xFC, 0xFC, 0x78, 0x3F, 0xF9, 0xB8, 0xBC, 0xBC, 0xA8, 0xFC, 0x00,
                                 0x10, 0x7D, 0x3F, 0x3F, 0x3F, 0x7F, 0x7F, 0x7F, 0x1F, 0x7F, 0x3F, 0x2F, 0x17, 0x17, 0x63, 0x74,
                                 0x00, 0x00, 0x10, 0x90, 0xF0, 0xFC, 0xFE, 0xBE, 0xC0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0x2C, 0xCC,
                                 0x3F, 0x3F, 0x2F, 0x60, 0x7F, 0x7F, 0x3F, 0x3C, 0x0F, 0x33, 0x13, 0x3F, 0x3F, 0x2A, 0x3E, 0x00,
                                 0xFF, 0xFF, 0xBF, 0x7E, 0xF0, 0xF0, 0xF0, 0x00, 0xE2, 0xEC, 0xE0, 0x90, 0xE0, 0xA0, 0xA0, 0x00,
                                 0x3F, 0x3F, 0x27, 0x60, 0x7F, 0x7F, 0x3F, 0x01, 0x03, 0x33, 0x1F, 0x3F, 0x3F, 0x2A, 0x2B, 0x00,
                                 0xFF, 0xBF, 0x3F, 0x7E, 0xF0, 0xF0, 0xF0, 0xE0, 0xE2, 0xEC, 0xE0, 0x90, 0xE0, 0xA0, 0xF0, 0x00 };
            byte[] dw4Merchant = { 0x00, 0x00, 0x00, 0x00, 0x18, 0x1F, 0x0F, 0x0F, 0x07, 0x0F, 0x0F, 0x0F, 0x1F, 0x1F, 0x3F, 0x7F,
                                   0x8B, 0xC8, 0x08, 0x08, 0x0F, 0x00, 0x1F, 0x1F, 0x77, 0x37, 0x37, 0x17, 0x30, 0x3F, 0x1F, 0x00,
                                   0xD2, 0x17, 0x13, 0x73, 0x80, 0x78, 0x78, 0x00, 0xEC, 0xE8, 0xEC, 0x88, 0x7C, 0xFC, 0x00, 0x00,
                                   0x00, 0x00, 0x00, 0x03, 0x1F, 0x1F, 0x0F, 0x0F, 0x07, 0x0F, 0x0F, 0x0F, 0x1E, 0x1A, 0x31, 0x7A,
                                   0xEF, 0xE7, 0x08, 0x0E, 0x01, 0x1E, 0x1E, 0x00, 0x1C, 0x1F, 0x37, 0x11, 0x3E, 0x3F, 0x00, 0x00,
                                   0xF2, 0xE7, 0x13, 0x13, 0xF0, 0x00, 0xF8, 0xF8, 0x3C, 0xF8, 0xEC, 0xE8, 0x0C, 0xFC, 0xF8, 0x00,
                                   0x00, 0x00, 0x00, 0x3C, 0x1F, 0x3F, 0x3F, 0x1F, 0x0F, 0x1F, 0x1F, 0x3F, 0x0F, 0x0B, 0x30, 0x09,
                                   0x00, 0x00, 0x00, 0x00, 0x80, 0xF0, 0xF0, 0x10, 0xC0, 0xE0, 0xE0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0,
                                   0x1E, 0x3E, 0x08, 0x09, 0x39, 0x00, 0x1F, 0x1F, 0x03, 0x1F, 0x37, 0x36, 0x06, 0x3F, 0x1F, 0x00,
                                   0x20, 0x90, 0xD0, 0xD8, 0x80, 0xF0, 0xF0, 0x00, 0xD0, 0x68, 0x28, 0x20, 0x78, 0xF8, 0x00, 0x00,
                                   0x1E, 0x1E, 0x07, 0x3B, 0x00, 0x1E, 0x1F, 0x01, 0x03, 0x11, 0x38, 0x04, 0x3F, 0x3F, 0x01, 0x00,
                                   0x20, 0x10, 0x90, 0x10, 0x18, 0x00, 0xF0, 0xF0, 0xD0, 0xE8, 0x68, 0xE8, 0xE0, 0xF8, 0xF0, 0x00 };
            byte[] dw2PriestJ = { 0x01, 0x03, 0x03, 0x03, 0x00, 0x03, 0x03, 0x0F, 0x01, 0x03, 0x03, 0x03, 0x03, 0x01, 0x01, 0x0E,
                                  0xE0, 0xF0, 0xF0, 0xF0, 0x00, 0xF0, 0xF0, 0xFC, 0xE0, 0xF0, 0xF0, 0xF0, 0xF0, 0x20, 0x20, 0x1C,
                                  0x1F, 0x1F, 0x3F, 0x31, 0x0F, 0x0F, 0x18, 0x07, 0x1F, 0x1F, 0x1F, 0x16, 0x0F, 0x0F, 0x1F, 0x18,
                                  0x3E, 0x3E, 0xFE, 0xEC, 0xDC, 0xDC, 0x5E, 0x80, 0xFE, 0xFE, 0x32, 0xD0, 0xFC, 0xFC, 0xFE, 0x7E,
                                  0x1F, 0x1F, 0x3F, 0x31, 0x0F, 0x0F, 0x1F, 0x00, 0x1F, 0x1F, 0x0F, 0x06, 0x0F, 0x0F, 0x1F, 0x1F,
                                  0x3E, 0x3E, 0xFE, 0xE4, 0xDC, 0xDC, 0x86, 0x78, 0xFE, 0xFE, 0x3C, 0xD8, 0xFC, 0xFC, 0xFE, 0x86,
                                  0x03, 0x07, 0x07, 0x07, 0x03, 0x04, 0x07, 0x1F, 0x03, 0x07, 0x07, 0x07, 0x07, 0x07, 0x03, 0x1C,
                                  0xC0, 0xE0, 0xE0, 0xE0, 0xC0, 0x20, 0xE0, 0xF8, 0xC0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xC0, 0x38,
                                  0x3F, 0x3F, 0x1F, 0x00, 0x1F, 0x1F, 0x30, 0x0F, 0x3F, 0x3F, 0x1F, 0x0F, 0x1F, 0x1F, 0x3F, 0x30,
                                  0xFC, 0xFE, 0xFF, 0x07, 0xF8, 0xF8, 0xFC, 0x00, 0xFC, 0xFE, 0xFE, 0xF4, 0xF8, 0xF8, 0xFC, 0xFC,
                                  0x03, 0x07, 0x07, 0x07, 0x00, 0x07, 0x07, 0x03, 0x03, 0x07, 0x07, 0x07, 0x07, 0x02, 0x02, 0x00,
                                  0xE0, 0xF0, 0xF0, 0xF0, 0x30, 0xC0, 0xF0, 0xE0, 0xE0, 0xF0, 0xF0, 0xF0, 0xF0, 0x70, 0x30, 0x00,
                                  0x05, 0x0B, 0x1F, 0x1E, 0x07, 0x0F, 0x08, 0x07, 0x07, 0x0F, 0x03, 0x05, 0x07, 0x0F, 0x0F, 0x18,
                                  0xF0, 0xF8, 0xF8, 0x30, 0xF8, 0xFC, 0x7C, 0x80, 0xF0, 0xF8, 0xF8, 0xC8, 0xC8, 0xFC, 0xFC, 0x7E,
                                  0x05, 0x0B, 0x0F, 0x0F, 0x07, 0x0F, 0x0F, 0x00, 0x07, 0x0F, 0x03, 0x04, 0x06, 0x0F, 0x0F, 0x1F,
                                  0xF0, 0xF8, 0xF8, 0x80, 0xF8, 0xFC, 0x0C, 0xF0, 0xF0, 0xF8, 0xF8, 0x78, 0x78, 0xFC, 0xFC, 0x0E,
                                  0x07, 0x0F, 0x0F, 0x0F, 0x0C, 0x03, 0x0F, 0x07, 0x07, 0x0F, 0x0F, 0x0F, 0x0F, 0x0E, 0x0C, 0x00,
                                  0xC0, 0xE0, 0xE0, 0xE0, 0x00, 0xE0, 0xE0, 0xC0, 0xC0, 0xE0, 0xE0, 0xE0, 0xE0, 0x40, 0x40, 0x00,
                                  0x0F, 0x1F, 0x1F, 0x0C, 0x1F, 0x3F, 0x3E, 0x01, 0x0F, 0x1F, 0x1F, 0x13, 0x13, 0x3F, 0x3F, 0x7E,
                                  0xA0, 0xD0, 0xF8, 0x78, 0xE0, 0xF0, 0x10, 0xE0, 0xE0, 0xF0, 0xC0, 0xA0, 0xE0, 0xF0, 0xF0, 0x18,
                                  0x0F, 0x1F, 0x1F, 0x01, 0x1F, 0x3F, 0x30, 0x0F, 0x0F, 0x1F, 0x1F, 0x1E, 0x1E, 0x3F, 0x3F, 0x70,
                                  0xA0, 0xD0, 0xF0, 0xF0, 0xE0, 0xF0, 0xF0, 0x00, 0xE0, 0xF0, 0xC0, 0x20, 0x60, 0xF0, 0xF0, 0xF8 };
            byte[] dw2PriestE = { 0x00, 0x00, 0x00, 0x07, 0x07, 0x0F, 0x07, 0x1A, 0x07, 0x0F, 0x1F, 0x1F, 0x18, 0x12, 0x3A, 0x3D,
                                  0x00, 0x00, 0x00, 0xE0, 0xE0, 0xF0, 0xE0, 0x58, 0xE0, 0xF0, 0xF8, 0xF8, 0x18, 0x48, 0x5C, 0xBC,
                                  0x38, 0x74, 0x77, 0x7B, 0x3C, 0x1F, 0x3F, 0x7F, 0x3F, 0x7F, 0x7F, 0x7F, 0x3F, 0x1F, 0x3F, 0x70,
                                  0x1C, 0x2E, 0xEE, 0xDE, 0x3C, 0xF8, 0xFC, 0xFC, 0xFC, 0xFE, 0xFE, 0xFE, 0xFC, 0xF8, 0xFC, 0xFC,
                                  0x38, 0x74, 0x77, 0x7B, 0x3C, 0x1F, 0x3F, 0x3F, 0x3F, 0x7F, 0x7F, 0x7F, 0x3F, 0x1F, 0x3F, 0x3F,
                                  0x1C, 0x2E, 0xEE, 0xDE, 0x3C, 0xF8, 0xFC, 0xFE, 0xFC, 0xFE, 0xFE, 0xFE, 0xFC, 0xF8, 0xFC, 0x0E,
                                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x0F, 0x0F, 0x1F, 0x1F, 0x1F, 0x3F, 0x3F,
                                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xF0, 0xF0, 0xF8, 0xF8, 0xF8, 0xFC, 0xFC,
                                  0x20, 0x70, 0x7C, 0x7F, 0x3F, 0x1F, 0x3F, 0x3F, 0x3F, 0x7F, 0x7F, 0x7F, 0x39, 0x19, 0x3F, 0x3F,
                                  0x04, 0x0E, 0x3E, 0xFE, 0xFC, 0xF8, 0xFC, 0xFC, 0xFC, 0xFE, 0xFE, 0xFE, 0x9C, 0x98, 0xFC, 0x0C,
                                  0x00, 0x00, 0x00, 0x1E, 0x1C, 0x1E, 0x1C, 0x0C, 0x1F, 0x3F, 0x3F, 0x3F, 0x03, 0x09, 0x0B, 0x13,
                                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xC0, 0xE0, 0xF0, 0xF0, 0xF8, 0xF8, 0xF8, 0xF8,
                                  0x03, 0x05, 0x0D, 0x3B, 0x07, 0x3F, 0x3F, 0x1F, 0x1F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x01,
                                  0xF0, 0xF8, 0xF8, 0xF8, 0xF0, 0xF0, 0xF8, 0xFC, 0xF8, 0xF8, 0xF8, 0xF8, 0xF0, 0xF0, 0xF8, 0xFC,
                                  0x03, 0x05, 0x0D, 0x3B, 0x07, 0x3F, 0x3F, 0x1F, 0x1F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x1E,
                                  0xF0, 0xF8, 0xF8, 0xF8, 0xF0, 0xF8, 0xFC, 0xFE, 0xF8, 0xF8, 0xF8, 0xF8, 0xF0, 0xF8, 0xFC, 0x1E,
                                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x03, 0x07, 0x0F, 0x0F, 0x1F, 0x1F, 0x1F, 0x1F,
                                  0x00, 0x00, 0x00, 0x78, 0x38, 0x78, 0x38, 0x30, 0xF8, 0xFC, 0xFC, 0xFC, 0xC0, 0x90, 0xD0, 0xC8,
                                  0x0F, 0x1F, 0x1F, 0x1F, 0x0F, 0x0F, 0x1F, 0x3F, 0x1F, 0x1F, 0x1F, 0x1F, 0x0F, 0x0F, 0x1F, 0x3F,
                                  0xC0, 0xA0, 0xB0, 0xDC, 0xE0, 0xFC, 0xFC, 0xF8, 0xF8, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0x80,
                                  0x0F, 0x1F, 0x1F, 0x1F, 0x0F, 0x1F, 0x3F, 0x7F, 0x1F, 0x1F, 0x1F, 0x1F, 0x0F, 0x1F, 0x3F, 0x78,
                                  0xC0, 0xA0, 0xB0, 0xDC, 0xE0, 0xFC, 0xFC, 0xF8, 0xF8, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0x78 };
            byte[] dw2King = { 0x01, 0x17, 0x1F, 0x1F, 0x1F, 0x07, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x18, 0x1F, 0x1F, 0x3F,
                               0x80, 0xE8, 0xF8, 0xFA, 0xFA, 0xE2, 0x00, 0x03, 0x02, 0x07, 0x07, 0x02, 0x1A, 0xF8, 0xFA, 0xF8,
                               0x30, 0x70, 0x7A, 0x1F, 0x7F, 0x3F, 0x3F, 0x00, 0x3F, 0x7F, 0x7F, 0x7F, 0x1F, 0x3F, 0x3F, 0x7F,
                               0x0F, 0x0E, 0x5C, 0xFC, 0xFC, 0xFC, 0x0E, 0xF0, 0xFC, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE,
                               0x80, 0xE8, 0xF8, 0xF8, 0xFA, 0xE2, 0x02, 0x00, 0x00, 0x02, 0x07, 0x07, 0x1A, 0xFA, 0xF8, 0xFA,
                               0x30, 0x70, 0x7A, 0x3F, 0x1F, 0x3F, 0x70, 0x0F, 0x3F, 0x7F, 0x7F, 0x1F, 0x1F, 0x3F, 0x7F, 0x7F,
                               0x0F, 0x0F, 0x5E, 0xF8, 0xF8, 0xFC, 0xFE, 0x00, 0xFC, 0xFE, 0xFE, 0xFA, 0xFA, 0xFE, 0xFE, 0xFE,
                               0x00, 0x0A, 0x0E, 0x0E, 0x07, 0x06, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x07, 0x0F, 0x0F,
                               0x48, 0x78, 0x38, 0x38, 0x90, 0xF0, 0xF8, 0x78, 0x00, 0x80, 0xC8, 0xF8, 0xE8, 0xA0, 0x20, 0x98,
                               0x03, 0x0F, 0x1F, 0x1F, 0x1F, 0x1F, 0x3F, 0x00, 0x1E, 0x1E, 0x1F, 0x1F, 0x1F, 0x1F, 0x3F, 0x7F,
                               0xA0, 0x80, 0xE0, 0x78, 0x70, 0x78, 0x40, 0xBC, 0x78, 0x78, 0xF0, 0xF8, 0xF8, 0xF8, 0xFC, 0xFC,
                               0x00, 0x0A, 0x0E, 0x0F, 0x07, 0x06, 0x00, 0x01, 0x00, 0x01, 0x01, 0x00, 0x01, 0x07, 0x0F, 0x0E,
                               0x48, 0x38, 0x38, 0xF8, 0x90, 0xF0, 0x78, 0xF8, 0x80, 0xC0, 0xC8, 0xF8, 0xE8, 0x20, 0xA0, 0x18,
                               0x04, 0x0C, 0x1F, 0x1F, 0x1F, 0x3F, 0x61, 0x1E, 0x1E, 0x1F, 0x1F, 0x1F, 0x1F, 0x3F, 0x7F, 0xFF,
                               0xA0, 0x80, 0x60, 0x78, 0x70, 0x78, 0xFC, 0x00, 0x78, 0xF8, 0xF0, 0xF8, 0xF8, 0xF8, 0xFC, 0xFC,
                               0x01, 0x17, 0x1F, 0x1F, 0x59, 0x47, 0x4F, 0x37, 0x00, 0x40, 0xE1, 0xE7, 0x5E, 0x5A, 0x12, 0x79,
                               0x80, 0xE8, 0xF8, 0xF8, 0x98, 0xE0, 0xF0, 0xEC, 0x00, 0x00, 0x80, 0xE0, 0x78, 0x58, 0x48, 0x9C,
                               0xF2, 0xF8, 0x7E, 0x1F, 0x1E, 0x1F, 0x31, 0x0F, 0x3F, 0x3F, 0x7F, 0x5F, 0x5F, 0x5F, 0x7F, 0x3F,
                               0x4E, 0x16, 0x7A, 0xF8, 0x78, 0xFC, 0xFC, 0x00, 0xFE, 0xFE, 0xE6, 0xE4, 0xF8, 0xFC, 0xFC, 0xFE,
                               0x01, 0x17, 0x1F, 0x5F, 0x59, 0x47, 0x0F, 0xC7, 0x40, 0xE0, 0xE1, 0x47, 0x5E, 0x1A, 0x52, 0x09,
                               0xF2, 0x78, 0x3E, 0x1F, 0x1E, 0x3F, 0x7F, 0x00, 0x3F, 0x7F, 0x7F, 0x5F, 0x5F, 0x7F, 0x7F, 0x7F,
                               0x4C, 0x1E, 0x7E, 0xF8, 0x7E, 0xF8, 0x0C, 0xF0, 0xFC, 0xFE, 0xFE, 0xFE, 0xF8, 0xF8, 0xFC, 0xFC,
                               0x12, 0x1F, 0x1F, 0x1F, 0x09, 0x0E, 0x1F, 0x1E, 0x00, 0x00, 0x10, 0x1E, 0x17, 0x05, 0x04, 0x19,
                               0x00, 0x50, 0xF0, 0xF0, 0xE0, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xE0, 0xF0, 0xF0,
                               0x04, 0x01, 0x07, 0x1F, 0x0F, 0x1F, 0x3F, 0x00, 0x1F, 0x1F, 0x0E, 0x1E, 0x1F, 0x1F, 0x3F, 0x3F,
                               0x80, 0xD0, 0x78, 0x78, 0xF8, 0xFC, 0x86, 0x78, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8, 0xFC, 0xFE, 0xFF,
                               0x12, 0x1F, 0x1F, 0x1F, 0x09, 0x0E, 0x1F, 0x1E, 0x00, 0x00, 0x10, 0x1E, 0x17, 0x05, 0x04, 0x19,
                               0x04, 0x01, 0x07, 0x1F, 0x0F, 0x1F, 0x03, 0x3C, 0x1F, 0x1F, 0x0F, 0x1F, 0x1F, 0x1F, 0x3F, 0x3F,
                               0x80, 0xD0, 0xF8, 0x98, 0xF8, 0xF8, 0xFC, 0x00, 0xF8, 0xF8, 0xF8, 0xF8, 0x98, 0xF8, 0xFC, 0xFE };
            byte[] dw1Girl = { 0x07, 0x0F, 0x0F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x07, 0x0F, 0x0F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F,
                               0x0F, 0x27, 0x30, 0x30, 0x3F, 0x1F, 0x3F, 0x3F, 0x1F, 0x1F, 0x0F, 0x0F, 0x0F, 0x1F, 0x3F, 0x3F,
                               0xFA, 0xF2, 0x00, 0x00, 0xF8, 0xF8, 0xFC, 0xFE, 0xFC, 0xFC, 0xF8, 0xF8, 0xF8, 0xF8, 0xFC, 0x8E,
                               0x03, 0x07, 0x0F, 0x0F, 0x1F, 0x1F, 0x1F, 0x1F, 0x03, 0x07, 0x0F, 0x0F, 0x1F, 0x1F, 0x1F, 0x1F,
                               0x07, 0x03, 0x1D, 0x1F, 0x0F, 0x0F, 0x0F, 0x0F, 0x07, 0x0F, 0x1F, 0x1F, 0x07, 0x05, 0x04, 0x01,
                               0xC0, 0xE0, 0xF0, 0xF0, 0xF8, 0xF8, 0xF8, 0xF8, 0xC0, 0xE0, 0xF0, 0xF0, 0xF8, 0xF8, 0xF8, 0xF8,
                               0x1C, 0x1D, 0x08, 0x09, 0x1F, 0x1F, 0x3F, 0x3F, 0x07, 0x0E, 0x0F, 0x0E, 0x1E, 0x1F, 0x3F, 0x23,
                               0x70, 0xB0, 0x80, 0x80, 0xE0, 0xF0, 0xF0, 0xF8, 0xF0, 0x70, 0x60, 0x60, 0x60, 0xF0, 0xF0, 0xF8,
                               0x06, 0x0F, 0x0B, 0x08, 0x1F, 0x1F, 0x3F, 0x3F, 0x01, 0x08, 0x0C, 0x0F, 0x1F, 0x1F, 0x3F, 0x3F,
                               0x70, 0xB0, 0x00, 0x00, 0xE0, 0xF0, 0xF8, 0xFC, 0xF0, 0x70, 0xE0, 0xE0, 0xE0, 0xF0, 0xF8, 0x1C,
                               0x07, 0x0C, 0x0B, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x07, 0x0F, 0x0F, 0x1F, 0x1E, 0x1A, 0x12, 0x18,
                               0xE0, 0x30, 0xD0, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8, 0xE0, 0xF0, 0xF0, 0xF8, 0x78, 0x58, 0x48, 0x18,
                               0x03, 0x23, 0x31, 0x31, 0x3F, 0x0F, 0x1F, 0x3F, 0x1E, 0x1F, 0x0F, 0x0F, 0x0F, 0x0F, 0x1F, 0x31,
                               0xCC, 0xCC, 0x80, 0x80, 0xF0, 0xF8, 0xFC, 0xFC, 0x70, 0xF0, 0xF0, 0xF0, 0xF0, 0xF8, 0xFC, 0xFC };
            byte[] dw2Girl = { 0x07, 0x0F, 0x0F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x07, 0x0F, 0x0F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F,
                               0x1F, 0x1F, 0x1F, 0x37, 0x21, 0x00, 0x00, 0x07, 0x1F, 0x0F, 0x0F, 0x07, 0x0F, 0x0F, 0x1F, 0x1F,
                               0xF8, 0xF8, 0xFC, 0xE6, 0xC4, 0x00, 0x00, 0x00, 0xF8, 0xF0, 0xF0, 0xE0, 0xF0, 0xF0, 0xF8, 0xFC,
                               0x03, 0x07, 0x0F, 0x0F, 0x1F, 0x1F, 0x1F, 0x1F, 0x03, 0x07, 0x0F, 0x0F, 0x1F, 0x1F, 0x1F, 0x1F,
                               0x07, 0x03, 0x0D, 0x0F, 0x0F, 0x0F, 0x0F, 0x07, 0x07, 0x0F, 0x0F, 0x0F, 0x0F, 0x04, 0x04, 0x00,
                               0xE0, 0xF0, 0xF0, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8, 0xE0, 0xF0, 0xF0, 0xF8, 0xF8, 0xF8, 0x78, 0xF8,
                               0x00, 0x01, 0x03, 0x07, 0x06, 0x00, 0x00, 0x00, 0x07, 0x0E, 0x0C, 0x01, 0x09, 0x0F, 0x1F, 0x1F,
                               0x78, 0x78, 0x30, 0xF0, 0x00, 0x00, 0x00, 0xE0, 0xF8, 0xF8, 0xF0, 0xF0, 0xF0, 0xF8, 0xF8, 0x1C,
                               0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x07, 0x0F, 0x0F, 0x03, 0x0F, 0x0F, 0x1F, 0x1F,
                               0x78, 0xF8, 0xF0, 0xF0, 0x60, 0x00, 0x00, 0x00, 0xF8, 0x78, 0x30, 0x90, 0x90, 0xF8, 0xF8, 0xFC,
                               0x07, 0x0C, 0x0B, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x07, 0x0F, 0x0F, 0x1F, 0x1F, 0x1A, 0x1A, 0x1C,
                               0xE0, 0x30, 0xD0, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8, 0xE0, 0xF0, 0xF0, 0xF8, 0xF8, 0x58, 0x58, 0x38,
                               0x30, 0x30, 0x38, 0x37, 0x20, 0x00, 0x00, 0x0E, 0x3F, 0x2F, 0x27, 0x06, 0x0F, 0x0F, 0x1F, 0x31,
                               0x0C, 0x0C, 0x1C, 0xEC, 0x08, 0x00, 0x00, 0x00, 0xFC, 0xF4, 0xE4, 0x60, 0xF0, 0xF0, 0xF8, 0xF8 };
            byte[] dw4Girl = { 0x07, 0x0F, 0x0F, 0x0F, 0x1F, 0x1F, 0x1F, 0x1F, 0x07, 0x0F, 0x0F, 0x0F, 0x1F, 0x1F, 0x1F, 0x1F,
                               0x1F, 0x1F, 0x07, 0x00, 0x00, 0x00, 0x0F, 0x1F, 0x1F, 0x0F, 0x0F, 0x07, 0x0F, 0x0F, 0x1F, 0x10,
                               0xF8, 0xF8, 0xFC, 0x0C, 0x00, 0x00, 0x00, 0xFC, 0xF8, 0xF0, 0xE0, 0xE0, 0xF0, 0xF0, 0xF8, 0xFC,
                               0x03, 0x07, 0x0F, 0x0F, 0x0F, 0x1F, 0x1F, 0x1F, 0x03, 0x07, 0x0F, 0x0F, 0x0F, 0x1F, 0x1E, 0x1F,
                               0x07, 0x03, 0x1D, 0x1F, 0x1F, 0x0B, 0x0B, 0x07, 0x07, 0x0F, 0x1F, 0x1F, 0x1B, 0x04, 0x04, 0x00,
                               0xC0, 0xE0, 0xF0, 0xF0, 0xF0, 0xF8, 0xF8, 0xF8, 0xC0, 0xE0, 0xF0, 0xF0, 0xF0, 0xF8, 0x78, 0xF8,
                               0x1E, 0x17, 0x01, 0x00, 0x00, 0x00, 0x0F, 0x1F, 0x03, 0x0E, 0x0E, 0x07, 0x0F, 0x0F, 0x1F, 0x10,
                               0x38, 0x98, 0xD8, 0xD0, 0xC0, 0x00, 0x00, 0xFC, 0xF8, 0x78, 0x38, 0x30, 0x30, 0xF0, 0xF8, 0xFC,
                               0x06, 0x07, 0x03, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x01, 0x08, 0x0C, 0x07, 0x0F, 0x0F, 0x1F, 0x1F,
                               0x38, 0x98, 0x98, 0x10, 0x00, 0x00, 0xF0, 0xFC, 0xF8, 0x78, 0x78, 0xF0, 0xF0, 0xF0, 0xF8, 0x0C,
                               0x07, 0x0C, 0x0B, 0x0F, 0x1F, 0x1D, 0x1D, 0x1F, 0x07, 0x0F, 0x0F, 0x0F, 0x1D, 0x1A, 0x12, 0x18,
                               0xE0, 0x30, 0xD0, 0xF0, 0xF8, 0xB8, 0xB8, 0xF8, 0xE0, 0xF0, 0xF0, 0xF0, 0xB8, 0x58, 0x48, 0x18,
                               0x1B, 0x1B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x06, 0x07, 0x07, 0x07, 0x0F, 0x0F, 0x1F, 0x3F,
                               0xD8, 0xD8, 0x1C, 0x0C, 0x00, 0x00, 0xF0, 0xF8, 0x68, 0xE0, 0xE0, 0xE0, 0xF0, 0xF0, 0xF8, 0x08 };
            byte[] dw1OldMan = { 0x01, 0x03, 0x03, 0x07, 0x07, 0x47, 0xC7, 0xFF, 0x01, 0x03, 0x03, 0x07, 0x07, 0x07, 0x07, 0x1F,
                                 0xE0, 0xF0, 0xE0, 0xE0, 0xF0, 0xF0, 0xF0, 0xF8, 0xE0, 0xF0, 0xE0, 0xE0, 0xF0, 0xF0, 0xF0, 0xF8,
                                 0x7F, 0x7F, 0x7F, 0x7F, 0x5F, 0x4F, 0x4F, 0x5F, 0x3F, 0x3F, 0x3F, 0x3F, 0x1F, 0x0F, 0x0F, 0x10,
                                 0xFC, 0xFE, 0xFE, 0xFE, 0xFC, 0xF8, 0xFC, 0xFE, 0xFC, 0xFE, 0xF8, 0xF8, 0xFC, 0xF8, 0xFC, 0xFE,
                                 0x01, 0x03, 0x03, 0x07, 0x07, 0x07, 0x07, 0x4F, 0x01, 0x03, 0x03, 0x07, 0x07, 0x07, 0x07, 0x0F,
                                 0xFF, 0xFF, 0x7F, 0x7F, 0x5F, 0x4F, 0x1F, 0x3F, 0x1F, 0x3F, 0x1F, 0x1F, 0x1F, 0x0F, 0x1F, 0x3F,
                                 0xFE, 0xFE, 0xFE, 0xFE, 0xFC, 0xF8, 0xF8, 0xFC, 0xFE, 0xFC, 0xFC, 0xFE, 0xFC, 0xF8, 0xF8, 0x84,
                                 0x03, 0x07, 0x07, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x03, 0x07, 0x07, 0x0F, 0x0F, 0x0F, 0x04, 0x05,
                                 0x03, 0x07, 0x07, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x03, 0x07, 0x07, 0x0F, 0x0F, 0x0F, 0x04, 0x05,
                                 0xE0, 0xD0, 0xC0, 0xC0, 0xC0, 0xE0, 0xE0, 0xE0, 0xE0, 0xD0, 0xC0, 0xC0, 0xC0, 0xE0, 0xE0, 0xE0,
                                 0x07, 0x03, 0x01, 0x01, 0x03, 0x07, 0x1F, 0x3F, 0x08, 0x0C, 0x1E, 0x1F, 0x0F, 0x0F, 0x1F, 0x31,
                                 0xF0, 0xF0, 0xF0, 0xF8, 0xF8, 0xF8, 0xF8, 0xFC, 0xF0, 0xF0, 0x70, 0x18, 0x98, 0xC8, 0xE0, 0xFC,
                                 0x0F, 0x0F, 0x0F, 0x1F, 0x1F, 0x1F, 0x1F, 0x3F, 0x0F, 0x0F, 0x0F, 0x19, 0x11, 0x1F, 0x1F, 0x3F,
                                 0xE0, 0xC0, 0x80, 0x80, 0xC0, 0xE0, 0xF8, 0xFC, 0xD0, 0xF0, 0xF8, 0xF8, 0xF0, 0xF0, 0xF8, 0x8C,
                                 0x07, 0x03, 0x01, 0x01, 0x03, 0x07, 0x1F, 0x3F, 0x0B, 0x0F, 0x1F, 0x1F, 0x0F, 0x0F, 0x1F, 0x3F,
                                 0xC0, 0xE0, 0xE0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xC0, 0xE0, 0xE0, 0xF0, 0xF0, 0xF0, 0x20, 0xA0,
                                 0x0F, 0x0F, 0x0F, 0x1F, 0x1F, 0x1F, 0x1F, 0x3F, 0x0F, 0x0F, 0x0C, 0x1C, 0x1E, 0x1F, 0x1F, 0x31,
                                 0xE0, 0xC0, 0x80, 0x80, 0xC0, 0xE0, 0xF8, 0xF8, 0xD0, 0xF0, 0xF8, 0xF8, 0xF0, 0xF0, 0xF8, 0xF8,
                                 0xF0, 0xF0, 0xF0, 0xF8, 0xF8, 0xF8, 0xF8, 0xFC, 0x70, 0x70, 0x30, 0x38, 0x78, 0x78, 0x78, 0x0C,
                                 0x07, 0x0F, 0x07, 0x07, 0x0F, 0x0F, 0x0F, 0x3F, 0x07, 0x0F, 0x07, 0x07, 0x0F, 0x0F, 0x0A, 0x3A,
                                 0x80, 0xC0, 0xC0, 0xE0, 0xE0, 0xE0, 0xE0, 0xF2, 0x80, 0xC0, 0xC0, 0xE0, 0xE0, 0xE0, 0xA0, 0xB0,
                                 0x7E, 0xF8, 0xF8, 0x78, 0x3C, 0x1E, 0x1F, 0x3F, 0x7D, 0x3F, 0x3F, 0x7F, 0x3F, 0x1F, 0x1F, 0x3F,
                                 0xFE, 0x3F, 0x3E, 0x3E, 0x7A, 0xF2, 0xF8, 0xFC, 0x78, 0xFC, 0xF8, 0xF8, 0xF8, 0xF0, 0xF8, 0x0C,
                                 0x80, 0xC0, 0xC0, 0xE0, 0xE2, 0xE6, 0xE7, 0xFB, 0x80, 0xC0, 0xC0, 0xE0, 0xE0, 0xE0, 0xA0, 0xB8,
                                 0x3E, 0x78, 0x78, 0x78, 0x3C, 0x1E, 0x3F, 0x7F, 0x3D, 0x7F, 0x3F, 0x3F, 0x3F, 0x1F, 0x3F, 0x61,
                                 0xFE, 0x3E, 0x3E, 0x3E, 0x7A, 0xF2, 0xF2, 0xFA, 0x7C, 0xF8, 0xF8, 0xFC, 0xF8, 0xF0, 0xF0, 0xF8 };
            byte[] dw4OldMan = { 0x07, 0x07, 0x00, 0x00, 0x3F, 0x7F, 0xFF, 0xFF, 0x00, 0x08, 0x0F, 0x0F, 0x2F, 0x6F, 0xEF, 0xFF,
                                 0xE0, 0xE0, 0x00, 0x00, 0xFC, 0xFE, 0xFF, 0xFF, 0x00, 0x10, 0xF0, 0xF0, 0xF4, 0xF6, 0xF7, 0xFF,
                                 0xF7, 0x77, 0x27, 0x3F, 0x3F, 0x3F, 0x7F, 0xFF, 0xFF, 0x79, 0x39, 0x2F, 0x2F, 0x2F, 0x70, 0xFF,
                                 0xEF, 0xEE, 0xE4, 0xFC, 0xFC, 0xFC, 0xFE, 0x86, 0xFF, 0x9E, 0x9C, 0xF4, 0xF4, 0x0C, 0xFE, 0xFE,
                                 0x07, 0x07, 0x00, 0x00, 0x3F, 0x7F, 0xFF, 0xFF, 0x00, 0x08, 0x0F, 0x0F, 0x2F, 0x6F, 0xEF, 0xFF,
                                 0xF7, 0x77, 0x27, 0x3F, 0x3F, 0x3F, 0x7F, 0x61, 0xFF, 0x79, 0x39, 0x2F, 0x2F, 0x30, 0x7F, 0x7F,
                                 0xEF, 0xEE, 0xE4, 0xFC, 0xFC, 0xFC, 0xFE, 0xFF, 0xFF, 0x9E, 0x9C, 0xF4, 0xF4, 0xF4, 0x0E, 0xFF,
                                 0x1C, 0x3E, 0x3E, 0x2E, 0x36, 0x7D, 0x79, 0x0B, 0x03, 0x01, 0x01, 0x11, 0x19, 0x13, 0x07, 0x36,
                                 0x1C, 0x3E, 0x3E, 0x2E, 0x36, 0x7D, 0x79, 0x0B, 0x03, 0x01, 0x01, 0x11, 0x19, 0x13, 0x07, 0x36,
                                 0x80, 0x40, 0x00, 0x00, 0xE0, 0xF0, 0xF8, 0xFC, 0x00, 0x80, 0xC0, 0xC0, 0xE0, 0x90, 0x78, 0xFC,
                                 0x03, 0x07, 0x0F, 0x1F, 0x3F, 0x3F, 0x3F, 0x03, 0x7E, 0x7E, 0x7D, 0x3D, 0x3D, 0x03, 0x3F, 0x3F,
                                 0xFC, 0xFC, 0xF8, 0xF8, 0xF8, 0xF8, 0xFC, 0xFE, 0xFC, 0xFC, 0xF8, 0xF0, 0xF0, 0xF0, 0xFC, 0xFE,
                                 0x3F, 0x3F, 0x1F, 0x1F, 0x1F, 0x1F, 0x3F, 0x7F, 0x3F, 0x3F, 0x1F, 0x0F, 0x0F, 0x0F, 0x3F, 0x7F,
                                 0xC0, 0xE0, 0xF0, 0xF8, 0xFC, 0xFC, 0xFC, 0xC0, 0x7E, 0x7E, 0xBE, 0xBC, 0xBC, 0xC0, 0xFC, 0xFC,
                                 0x03, 0x07, 0x0F, 0x1F, 0x3F, 0x3F, 0x3F, 0x3E, 0x7E, 0x7E, 0x7D, 0x3D, 0x3D, 0x3D, 0x03, 0x3F,
                                 0x38, 0x7C, 0x7C, 0x74, 0x6C, 0xBE, 0x9E, 0xD0, 0xC0, 0x80, 0x80, 0x88, 0x98, 0xC8, 0xE0, 0x6C,
                                 0x3F, 0x3F, 0x1F, 0x1F, 0x1F, 0x1F, 0x3F, 0x78, 0x3F, 0x3F, 0x1F, 0x0F, 0x0F, 0x0F, 0x3F, 0x7F,
                                 0xC0, 0xE0, 0xF0, 0xF8, 0xFC, 0xFC, 0xFC, 0x7C, 0x7E, 0x7E, 0xBE, 0xBC, 0xBC, 0xBC, 0xC0, 0xFC,
                                 0xFC, 0xFC, 0xF8, 0xF8, 0xF8, 0xF8, 0xFC, 0x1E, 0xFC, 0xFC, 0xF8, 0xF0, 0xF0, 0xF0, 0xFC, 0xFE,
                                 0x03, 0x07, 0x07, 0x0D, 0x3B, 0x77, 0xF7, 0xF4, 0x04, 0x08, 0x08, 0x02, 0x36, 0x7A, 0xE8, 0xEB,
                                 0xC0, 0xE0, 0xE0, 0xB0, 0xDC, 0xEE, 0xEF, 0x2F, 0x20, 0x10, 0x10, 0x40, 0x6C, 0x5E, 0x17, 0xD7,
                                 0xF9, 0x78, 0x3C, 0x3E, 0x3F, 0x3F, 0x7F, 0x7F, 0xEE, 0x6F, 0x2F, 0x2F, 0x2F, 0x2F, 0x70, 0x7F,
                                 0x9F, 0x1E, 0x3C, 0x7C, 0xFC, 0xFC, 0xFE, 0x86, 0x77, 0xF6, 0xF4, 0xF4, 0xF4, 0x0C, 0xFE, 0xFE,
                                 0xC0, 0xE0, 0xE0, 0xB0, 0xDC, 0xEE, 0xEF, 0x2F, 0x20, 0x10, 0x10, 0x40, 0x6C, 0x5E, 0x17, 0xD7,
                                 0xF9, 0x78, 0x3C, 0x3E, 0x3F, 0x3F, 0x7F, 0x61, 0xEE, 0x6F, 0x2F, 0x2F, 0x2F, 0x30, 0x7F, 0x7F,
                                 0x9F, 0x1E, 0x3C, 0x7C, 0xFC, 0xFC, 0xFE, 0xFE, 0x77, 0xF6, 0xF4, 0xF4, 0xF4, 0xF4, 0x0E, 0xFE };
            byte[] dw1SoldierP1 = { 0x06, 0x08, 0x06, 0x04, 0x0F, 0x0F, 0x3F, 0x3F, 0x07, 0x6F, 0x7F, 0x5F, 0x4F, 0x4B, 0x72, 0x78,
                                    0x60, 0x10, 0x60, 0x20, 0xF0, 0xF0, 0xFC, 0xFE, 0xE0, 0xF4, 0xFC, 0xF8, 0xF0, 0xD0, 0x4C, 0x1E,
                                    0xFF, 0xFF, 0xEF, 0x00, 0x1F, 0x1F, 0x0F, 0x0F, 0xFE, 0x9F, 0x8F, 0x4F, 0x5F, 0x1F, 0x0F, 0x00,
                                    0xF8, 0xF6, 0x96, 0x06, 0xC6, 0x72, 0x70, 0x00, 0x7E, 0xFE, 0xFC, 0xFE, 0xFE, 0x7E, 0x06, 0x00,
                                    0x06, 0x08, 0x06, 0x04, 0x0F, 0x0F, 0x3F, 0xFF, 0x47, 0x6F, 0x7F, 0x5F, 0x4F, 0x4B, 0x72, 0xF8,
                                    0x60, 0x10, 0x60, 0x20, 0xF0, 0xF0, 0xFC, 0xFE, 0xE0, 0xF4, 0xFC, 0xF8, 0xF0, 0xD0, 0x4C, 0x1E,
                                    0xFF, 0xFF, 0x2F, 0x00, 0x1F, 0x1E, 0x0E, 0x00, 0x9E, 0x9F, 0x6F, 0x4F, 0x1F, 0x1E, 0x00, 0x00,
                                    0xC2, 0xBC, 0xBC, 0x3C, 0xBC, 0xD8, 0xE0, 0xF0, 0x7E, 0xFE, 0xEE, 0xF6, 0xFE, 0xFE, 0xFE, 0x00,
                                    0x07, 0x01, 0x0E, 0x06, 0x1F, 0x0F, 0x0F, 0x0F, 0x0F, 0x1F, 0x1F, 0x1F, 0x1F, 0x0D, 0x04, 0x01,
                                    0xC0, 0x60, 0x70, 0x70, 0xF0, 0x70, 0x80, 0xE0, 0xE0, 0xF0, 0xF8, 0xF8, 0xF8, 0xF8, 0xF0, 0xE0,
                                    0x07, 0x1B, 0x1B, 0x1B, 0x18, 0x16, 0x0F, 0x0F, 0x1B, 0x1E, 0x1C, 0x0C, 0x1F, 0x1F, 0x1F, 0x00,
                                    0xF0, 0xF0, 0xF0, 0x00, 0x78, 0x38, 0x30, 0x00, 0x70, 0x30, 0x70, 0xF0, 0xF8, 0xF8, 0xC0, 0x00,
                                    0x07, 0x01, 0x0E, 0x06, 0x1F, 0x0F, 0x0F, 0x0F, 0x0F, 0x1F, 0x1F, 0x1F, 0x1F, 0x0D, 0x04, 0x01,
                                    0xC0, 0x60, 0x70, 0x70, 0xF0, 0x70, 0x80, 0xE0, 0xE0, 0xF0, 0xF8, 0xF8, 0xF8, 0xF8, 0xF0, 0xE0,
                                    0x00, 0x07, 0x07, 0x07, 0x17, 0x1B, 0x0C, 0x00, 0x07, 0x0F, 0x0D, 0x0E, 0x1F, 0x1F, 0x03, 0x00,
                                    0x70, 0xB0, 0xB0, 0x80, 0xB8, 0x38, 0x30, 0xF0, 0xB0, 0xD0, 0xD0, 0xF0, 0xF8, 0xF8, 0xF0, 0x00,
                                    0xA0, 0x80, 0x30, 0x20, 0xB8, 0xB0, 0xB0, 0xF0, 0xF0, 0xF8, 0xF8, 0xF8, 0xF8, 0xE0, 0x60, 0xC0,
                                    0x0F, 0x0F, 0x0F, 0x00, 0x1F, 0x1F, 0x0F, 0x0F, 0x0D, 0x08, 0x08, 0x0F, 0x1F, 0x1F, 0x0F, 0x00,
                                    0xE0, 0xF8, 0xA8, 0x08, 0xF8, 0xF8, 0x70, 0x00, 0x38, 0x38, 0x70, 0xF8, 0xF8, 0xF8, 0x00, 0x00,
                                    0x03, 0x06, 0x0E, 0x0E, 0x0F, 0x0E, 0x01, 0x07, 0x07, 0x0F, 0x1F, 0x1F, 0x1F, 0x1F, 0x0F, 0x07,
                                    0xE0, 0x80, 0x30, 0x20, 0xB8, 0xB0, 0xB0, 0xB0, 0xF0, 0xF8, 0xF8, 0xF8, 0xF8, 0xE0, 0x60, 0xC0,
                                    0x0F, 0x0F, 0x0F, 0x03, 0x1F, 0x1F, 0x0E, 0x00, 0x0D, 0x09, 0x08, 0x0C, 0x1F, 0x1F, 0x00, 0x00,
                                    0xE0, 0xF0, 0xE0, 0x80, 0xB8, 0xF8, 0xF0, 0xF0, 0xE0, 0x30, 0x30, 0x70, 0xF8, 0xF8, 0xF0, 0x00 };
            byte[] dw1SoldierP2 = { 0x06, 0x0E, 0x0E, 0x0E, 0x0E, 0x06, 0x38, 0x7B, 0x07, 0x2F, 0x3F, 0x1F, 0x0F, 0x0F, 0x3F, 0x7F,
                                    0x60, 0x70, 0x70, 0x70, 0x70, 0x60, 0x1C, 0xDF, 0xE2, 0xF6, 0xFE, 0xFA, 0xF2, 0xF2, 0xFE, 0xFF,
                                    0x37, 0x7F, 0x7F, 0x40, 0x47, 0x22, 0x02, 0x00, 0x7F, 0x9F, 0x9F, 0xFF, 0xFF, 0x7E, 0x3C, 0x00,
                                    0xEE, 0xFE, 0xF0, 0x00, 0xF8, 0xF8, 0xF0, 0xF0, 0xF8, 0xF0, 0xF2, 0xF2, 0xF8, 0xF8, 0xF0, 0x00,
                                    0x06, 0x0E, 0x0E, 0x0E, 0x0E, 0x06, 0x38, 0x7B, 0x07, 0x2F, 0x3F, 0x1F, 0x0F, 0x0F, 0x3F, 0x7F,
                                    0x60, 0x70, 0x70, 0x70, 0x70, 0x60, 0x1C, 0xDC, 0xE0, 0xF6, 0xFE, 0xFA, 0xF2, 0xF2, 0xFE, 0xFE,
                                    0x37, 0xDF, 0xCF, 0x40, 0xC7, 0xA3, 0x03, 0x0F, 0xDF, 0xEF, 0xEF, 0x7F, 0xFF, 0xFF, 0xBF, 0x00,
                                    0xEF, 0xFF, 0xFF, 0x00, 0xF8, 0xF8, 0x70, 0x00, 0xFB, 0xF1, 0xF1, 0xF2, 0xFA, 0xF8, 0x00, 0x00 };
            byte[] dw2SoldierP1 = { 0x02, 0x02, 0x07, 0x05, 0x07, 0x17, 0x3F, 0x3F, 0x13, 0x1F, 0x0F, 0x07, 0x04, 0x10, 0x3C, 0x3F,
                                    0x42, 0x42, 0xE2, 0xA0, 0xE0, 0xE8, 0xFC, 0xF8, 0xC8, 0xF8, 0xF2, 0xE2, 0x22, 0x0A, 0x3E, 0xFE,
                                    0x0F, 0x46, 0x68, 0x1F, 0x1F, 0x1F, 0x0F, 0x0F, 0x3F, 0x27, 0x0F, 0x1F, 0x1F, 0x1F, 0x00, 0x0F,
                                    0xF6, 0x66, 0x10, 0xF8, 0xF8, 0xF8, 0x70, 0x00, 0xF8, 0xE0, 0xF2, 0xFB, 0xFB, 0xFB, 0x73, 0x03,
                                    0x02, 0x02, 0x07, 0x05, 0x07, 0x17, 0x3F, 0x3F, 0x13, 0x1F, 0x0F, 0x07, 0x04, 0x10, 0x3C, 0x3F,
                                    0x41, 0x41, 0xE1, 0xA0, 0xE0, 0xE8, 0xFC, 0xF8, 0xC8, 0xF8, 0xF1, 0xE1, 0x21, 0x09, 0x3D, 0xFD,
                                    0x0F, 0x06, 0x18, 0x1F, 0x1F, 0x1F, 0x0E, 0x00, 0x3F, 0x3F, 0x07, 0x07, 0x1F, 0x1F, 0x0E, 0x00,
                                    0xF0, 0x63, 0x13, 0xF8, 0xF8, 0xF8, 0xF0, 0xF0, 0xFF, 0xE4, 0xF0, 0xF9, 0xF9, 0xF9, 0x01, 0xF1,
                                    0x05, 0x07, 0x0E, 0x13, 0x1B, 0x1B, 0x0B, 0x1A, 0x0B, 0x1B, 0x1F, 0x1F, 0x04, 0x04, 0x07, 0x1F,
                                    0x80, 0x20, 0x60, 0xE0, 0xE0, 0xC0, 0xC0, 0x60, 0xC0, 0xE0, 0xE0, 0xE0, 0xE0, 0x40, 0xC0, 0xE0,
                                    0x18, 0x0E, 0x06, 0x1B, 0x3B, 0x3B, 0x19, 0x03, 0x1F, 0x19, 0x09, 0x1F, 0x3F, 0x3F, 0x1C, 0x07,
                                    0x60, 0xE0, 0x00, 0xE0, 0xF0, 0xF0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xF0, 0xF0, 0x00, 0xE0,
                                    0x01, 0x07, 0x0F, 0x16, 0x1E, 0x1E, 0x0E, 0x1E, 0x0E, 0x1E, 0x1F, 0x1F, 0x01, 0x01, 0x03, 0x1F,
                                    0x80, 0x20, 0x60, 0xE0, 0xE0, 0xC0, 0xC0, 0x60, 0xC0, 0xE0, 0xE0, 0xE0, 0xE0, 0x40, 0xC0, 0xE0,
                                    0x1E, 0x0F, 0x01, 0x1E, 0x3E, 0x3E, 0x1E, 0x3E, 0x1F, 0x1E, 0x0E, 0x1F, 0x3F, 0x3F, 0x01, 0x3F,
                                    0x20, 0xA0, 0x80, 0xE0, 0xF0, 0xF0, 0xE0, 0x00, 0xE0, 0x60, 0x40, 0xE0, 0xF0, 0xF0, 0xE0, 0x00,
                                    0x80, 0xE0, 0x70, 0xE8, 0xF8, 0xF8, 0xF0, 0x78, 0xF0, 0xF8, 0xF8, 0xF8, 0x00, 0x00, 0xC0, 0xF8,
                                    0x06, 0x07, 0x00, 0x07, 0x0F, 0x0F, 0x07, 0x07, 0x07, 0x07, 0x03, 0x07, 0x0F, 0x0F, 0x00, 0x07,
                                    0x38, 0x30, 0x30, 0xF8, 0xFC, 0xFC, 0xB8, 0xC0, 0xF8, 0xC8, 0xC0, 0xF8, 0xFC, 0xFC, 0x38, 0xC0,
                                    0x01, 0x04, 0x06, 0x07, 0x07, 0x03, 0x03, 0x06, 0x03, 0x07, 0x07, 0x07, 0x07, 0x02, 0x03, 0x07,
                                    0x80, 0xE0, 0x70, 0xE8, 0xF8, 0xF8, 0xF0, 0x78, 0xF0, 0xF8, 0xF8, 0xF8, 0x00, 0x00, 0xC0, 0xF8,
                                    0x04, 0x04, 0x03, 0x07, 0x0F, 0x0F, 0x07, 0x00, 0x07, 0x07, 0x00, 0x04, 0x0F, 0x0F, 0x07, 0x00,
                                    0x78, 0xF0, 0x00, 0xF8, 0xFC, 0xFC, 0x78, 0x7C, 0xF8, 0xF8, 0xF0, 0xF8, 0xFC, 0xFC, 0x00, 0x7C };
            byte[] dw2SoldierP2 = { 0x82, 0x86, 0x86, 0x06, 0x07, 0x17, 0x3F, 0x3F, 0x13, 0x1F, 0x8F, 0x87, 0x87, 0x97, 0xBC, 0xBF,
                                    0x40, 0x60, 0x60, 0x60, 0xE0, 0xE8, 0xFC, 0xFC, 0xC8, 0xF8, 0xF0, 0xE0, 0xE0, 0xE8, 0x3C, 0xFC,
                                    0x0F, 0xDF, 0xC8, 0x1F, 0x1F, 0x1F, 0x0E, 0x00, 0xBF, 0x3F, 0x0F, 0x9F, 0x9F, 0x9F, 0x8E, 0x80,
                                    0xF8, 0xF8, 0x10, 0xF8, 0xF8, 0xF8, 0xF0, 0xF0, 0xFC, 0xFC, 0xF8, 0xF8, 0xF8, 0xF8, 0x00, 0xF0,
                                    0x42, 0x46, 0x46, 0x06, 0x07, 0x17, 0x3F, 0x3F, 0x13, 0x1F, 0x4F, 0x47, 0x47, 0x57, 0x7C, 0x7F,
                                    0x40, 0x60, 0x60, 0x60, 0xE0, 0xE8, 0xFC, 0xFC, 0xC8, 0xF8, 0xF0, 0xE0, 0xE0, 0xE8, 0x3C, 0xFC,
                                    0x5F, 0x4F, 0x08, 0x1F, 0x1F, 0x1F, 0x0F, 0x0F, 0x3F, 0x2F, 0x4F, 0x5F, 0x5F, 0x5F, 0x40, 0x4F,
                                    0xF8, 0xF6, 0x16, 0xF8, 0xF8, 0xF8, 0x70, 0x00, 0xFC, 0xF8, 0xF0, 0xF8, 0xF8, 0xF8, 0x70, 0x00 };
            byte[] dw4RagnarP1 = { 0x21, 0x60, 0x65, 0x60, 0x67, 0x67, 0x67, 0x67, 0x01, 0x07, 0x0F, 0x0F, 0x1A, 0x1A, 0x09, 0x0B,
                                   0x80, 0x00, 0xA0, 0x00, 0xE0, 0xE0, 0xE0, 0xE0, 0x80, 0xE0, 0xF0, 0xF0, 0x58, 0x58, 0x90, 0xD6,
                                   0x7B, 0x04, 0x71, 0x7F, 0x32, 0x26, 0x7F, 0x00, 0x9E, 0x7B, 0x1F, 0x1F, 0x3F, 0x39, 0x71, 0x00,
                                   0xD8, 0x2C, 0x8E, 0xFE, 0x4C, 0x64, 0xFE, 0xF0, 0x7F, 0xD3, 0xF8, 0xF8, 0xFC, 0x9C, 0x0E, 0x00,
                                   0x01, 0x00, 0x05, 0x20, 0x67, 0x67, 0x67, 0x67, 0x01, 0x07, 0x0F, 0x0F, 0x1A, 0x1A, 0x09, 0x0B,
                                   0x80, 0x00, 0xA0, 0x00, 0xE0, 0xE0, 0xE0, 0xE0, 0x80, 0xE0, 0xF0, 0xF0, 0x58, 0x58, 0x90, 0xD0,
                                   0x7B, 0x64, 0x61, 0x0F, 0x72, 0x26, 0x0F, 0x0F, 0x1E, 0x1B, 0x9F, 0xFF, 0x1F, 0x39, 0x00, 0x00,
                                   0xD8, 0x28, 0x9C, 0xFC, 0x4E, 0x64, 0xF0, 0x00, 0x7E, 0xD7, 0xE3, 0xE0, 0xFE, 0x9C, 0x80, 0x00,
                                   0x13, 0x30, 0x3D, 0x30, 0x37, 0x3F, 0x37, 0x37, 0x03, 0x07, 0x0F, 0x0F, 0x02, 0x02, 0x04, 0x06,
                                   0xF0, 0x18, 0x0C, 0x04, 0x04, 0x04, 0x00, 0xF0, 0xF0, 0xF8, 0xFC, 0xFC, 0xFC, 0xFC, 0xF8, 0x7C,
                                   0x06, 0x31, 0x30, 0x0F, 0x02, 0x06, 0x07, 0x0F, 0x7B, 0x0E, 0x0F, 0x3F, 0x0F, 0x19, 0x00, 0x00,
                                   0x08, 0x18, 0x7C, 0xFC, 0x44, 0x62, 0x33, 0x00, 0xF8, 0xE0, 0x84, 0x8C, 0xFC, 0xDE, 0x0F, 0x00,
                                   0x03, 0x00, 0x0D, 0x00, 0x07, 0x6F, 0x77, 0x3F, 0x03, 0x07, 0x0F, 0x0F, 0x02, 0x02, 0x04, 0x06,
                                   0xF0, 0x18, 0x0C, 0x04, 0x04, 0x04, 0x00, 0xF0, 0xF0, 0xF8, 0xFC, 0xFC, 0xFC, 0xFC, 0xF8, 0x7C,
                                   0x1E, 0x01, 0x01, 0x07, 0x02, 0x06, 0x0E, 0x00, 0x03, 0x0E, 0x0E, 0x07, 0x0F, 0x19, 0x00, 0x00,
                                   0x08, 0xBC, 0xFC, 0xEE, 0x47, 0x62, 0x70, 0xF0, 0xF8, 0x4C, 0x0C, 0x9E, 0xFF, 0x9E, 0x0C, 0x00,
                                   0xC8, 0x0C, 0xBC, 0x0C, 0xEC, 0xFC, 0xEC, 0xEC, 0xC0, 0xE0, 0xF0, 0xF0, 0x40, 0x40, 0x20, 0x60,
                                   0x18, 0x19, 0x19, 0x3F, 0x3A, 0x76, 0xFC, 0x1E, 0x1F, 0x1E, 0x1E, 0x3F, 0x3F, 0x7B, 0xF0, 0x00,
                                   0xE0, 0x80, 0xFC, 0xE0, 0x40, 0x60, 0xE0, 0x00, 0x5C, 0x7C, 0x00, 0x0C, 0xF0, 0x98, 0x00, 0x00,
                                   0x0F, 0x18, 0x30, 0x20, 0x20, 0x20, 0x00, 0x0F, 0x0F, 0x1F, 0x3F, 0x3F, 0x3F, 0x3F, 0x1F, 0x3E,
                                   0xC0, 0x00, 0xB0, 0x00, 0xE0, 0xF6, 0xEE, 0xFC, 0xC0, 0xE0, 0xF0, 0xF0, 0x40, 0x40, 0x20, 0x60,
                                   0x18, 0x36, 0x37, 0x73, 0xE2, 0x46, 0x0C, 0x00, 0x1F, 0x39, 0x38, 0x7C, 0xFF, 0x7B, 0x30, 0x00,
                                   0xF8, 0xF0, 0xE0, 0xE0, 0xC0, 0x60, 0xE0, 0xF0, 0x40, 0x80, 0x50, 0x60, 0xF0, 0x98, 0x00, 0x00 };
            byte[] dw4RagnarP2 = { 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x01, 0x07, 0x0F, 0x0F, 0x1F, 0x1F, 0x0F, 0x0F,
                                   0x80, 0x80, 0x80, 0x84, 0x86, 0x86, 0x06, 0x06, 0x80, 0xE0, 0xF0, 0xF0, 0xF8, 0xF8, 0xF0, 0xF0,
                                   0x18, 0x1F, 0x3F, 0x3F, 0x7F, 0x3F, 0x0F, 0x0F, 0x7F, 0xFF, 0xDF, 0x3F, 0x7F, 0x3F, 0x0F, 0x00,
                                   0x1E, 0xF8, 0xFE, 0xFE, 0xF8, 0xFC, 0xF0, 0x00, 0xF8, 0xF7, 0xF1, 0xF9, 0xFE, 0xFC, 0xF0, 0x00,
                                   0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x01, 0x07, 0x0F, 0x0F, 0x1F, 0x1F, 0x0F, 0x6F,
                                   0x84, 0x86, 0x86, 0x86, 0x86, 0x86, 0x06, 0x06, 0x80, 0xE0, 0xF0, 0xF0, 0xF8, 0xF8, 0xF0, 0xF0,
                                   0x18, 0x3F, 0x7F, 0x7F, 0x3F, 0x3F, 0x7F, 0x00, 0xFF, 0xDF, 0x1F, 0x1F, 0x3F, 0x3F, 0x7F, 0x00,
                                   0x10, 0xF6, 0xFE, 0xF8, 0xFC, 0xFC, 0xFE, 0xF0, 0xFF, 0xF9, 0xF8, 0xFE, 0xFC, 0xFC, 0xFE, 0x00 };
            byte[] dw1TownMan = { 0x07, 0x0F, 0x0F, 0x1F, 0x0F, 0x1F, 0x0F, 0x0F, 0x07, 0x0F, 0x0F, 0x1F, 0x0F, 0x1F, 0x07, 0x18,
                                  0x27, 0x60, 0x60, 0x60, 0x61, 0x0E, 0x0E, 0x00, 0x3F, 0x7F, 0x7F, 0x1F, 0x1F, 0x0E, 0x00, 0x00,
                                  0xE6, 0x06, 0x06, 0x00, 0x80, 0xF0, 0xF0, 0xF0, 0xF8, 0xFC, 0xFE, 0xF8, 0xF8, 0xF0, 0xF0, 0x00,
                                  0x07, 0x0F, 0x0F, 0x1F, 0x0F, 0x1F, 0x0F, 0x0F, 0x07, 0x0F, 0x0F, 0x1F, 0x0E, 0x1A, 0x02, 0x18,
                                  0xE0, 0xF0, 0xF0, 0xF8, 0xF0, 0xF8, 0xF0, 0xF0, 0xE0, 0xF0, 0xF0, 0xF8, 0x70, 0x58, 0x40, 0x18,
                                  0x67, 0x63, 0x63, 0x00, 0x03, 0x0E, 0x0E, 0x00, 0x1E, 0x1F, 0x7F, 0x1F, 0x1F, 0x0E, 0x00, 0x00,
                                  0xE4, 0xC6, 0xC6, 0x06, 0xC6, 0xF0, 0xF0, 0xF0, 0x7C, 0xFE, 0xFE, 0xF8, 0xF8, 0xF0, 0xF0, 0x00,
                                  0x07, 0x0F, 0x1F, 0x1F, 0x1F, 0x0F, 0x0F, 0x07, 0x07, 0x0F, 0x1F, 0x1F, 0x17, 0x05, 0x04, 0x01,
                                  0xE0, 0xF0, 0xF0, 0xF8, 0xF0, 0xF8, 0xF0, 0x20, 0xE0, 0xF0, 0xF0, 0xF8, 0xF0, 0xF8, 0xF0, 0xC0,
                                  0x1E, 0x1C, 0x18, 0x00, 0x18, 0x0F, 0x0F, 0x0F, 0x07, 0x0F, 0x1F, 0x1F, 0x1F, 0x0F, 0x0F, 0x00,
                                  0xC0, 0xE0, 0x60, 0x60, 0x70, 0x70, 0x70, 0x00, 0xE0, 0xF0, 0xF0, 0x90, 0x90, 0x70, 0x00, 0x00,
                                  0x06, 0x0F, 0x1F, 0x00, 0x18, 0x0E, 0x0E, 0x00, 0x07, 0x09, 0x19, 0x1F, 0x1F, 0x0E, 0x00, 0x00,
                                  0xC0, 0xC0, 0x80, 0x00, 0x10, 0xF0, 0xF0, 0xF0, 0xE0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0x00 };
            byte[] dw2TownMan = { 0x03, 0x07, 0x0F, 0x0F, 0x0F, 0x0F, 0x07, 0x0F, 0x03, 0x07, 0x0F, 0x0F, 0x0F, 0x0F, 0x03, 0x0C,
                                  0x1F, 0x1F, 0x3F, 0x3F, 0x1C, 0x00, 0x00, 0x1E, 0x0F, 0x0F, 0x1F, 0x1F, 0x1F, 0x0F, 0x0E, 0x1E,
                                  0xF8, 0xFC, 0xFE, 0xFE, 0x38, 0x00, 0x78, 0x00, 0xF0, 0xF0, 0xF8, 0xF8, 0xF8, 0xF0, 0x78, 0x00,
                                  0x03, 0x07, 0x0F, 0x0F, 0x0F, 0x0F, 0x07, 0x0F, 0x03, 0x07, 0x0D, 0x0D, 0x0C, 0x0A, 0x02, 0x0C,
                                  0xC0, 0xE0, 0xF0, 0xF0, 0xF0, 0xF0, 0xE0, 0xF0, 0xC0, 0xE0, 0xF0, 0xF0, 0xF0, 0x50, 0x40, 0x30,
                                  0x1E, 0x1E, 0x3F, 0x3F, 0x1E, 0x00, 0x00, 0x1E, 0x0F, 0x0F, 0x1F, 0x1E, 0x1F, 0x0F, 0x0E, 0x1E,
                                  0x78, 0x7C, 0xFE, 0xFE, 0x78, 0x00, 0x78, 0x00, 0xF0, 0xF0, 0xF8, 0x78, 0xF8, 0xF0, 0x78, 0x00,
                                  0x03, 0x07, 0x07, 0x0F, 0x0F, 0x0F, 0x0F, 0x07, 0x03, 0x07, 0x07, 0x0B, 0x0B, 0x05, 0x04, 0x00,
                                  0xC0, 0xE0, 0xE0, 0xF0, 0xF0, 0xF0, 0xE0, 0xC0, 0xC0, 0xE0, 0xE0, 0xF0, 0xF0, 0xF0, 0x60, 0x00,
                                  0x03, 0x07, 0x0F, 0x0F, 0x03, 0x00, 0x00, 0x0F, 0x07, 0x0F, 0x0F, 0x07, 0x0F, 0x07, 0x07, 0x0F,
                                  0xE0, 0xF0, 0xF0, 0xE0, 0xE0, 0x10, 0x20, 0x80, 0xE0, 0x30, 0x10, 0x80, 0x90, 0xF0, 0xA0, 0x80,
                                  0x03, 0x07, 0x0F, 0x0F, 0x03, 0x18, 0x0C, 0x01, 0x07, 0x0F, 0x0F, 0x06, 0x0E, 0x1F, 0x0C, 0x01,
                                  0xE0, 0xF0, 0xF0, 0xE0, 0xE0, 0x00, 0x10, 0xE0, 0xE0, 0x30, 0x30, 0x20, 0x70, 0xF0, 0xF0, 0xE0 };
            byte[] dw4TownMan = { 0x07, 0x0F, 0x1F, 0x0F, 0x1F, 0x0F, 0x0F, 0x3F, 0x07, 0x0F, 0x1F, 0x0F, 0x1F, 0x0F, 0x0F, 0x3C,
                                  0x7F, 0x7F, 0x1F, 0x3F, 0x3E, 0x00, 0x00, 0x0F, 0x3F, 0x1F, 0x1F, 0x3F, 0x3F, 0x0F, 0x0F, 0x0F,
                                  0xFE, 0xFF, 0xFB, 0xFF, 0x7C, 0x00, 0x70, 0x00, 0xFC, 0xF8, 0xF8, 0xFC, 0xFC, 0xF0, 0x70, 0x00,
                                  0x07, 0x0F, 0x1F, 0x0F, 0x1F, 0x0F, 0x0F, 0x3F, 0x07, 0x0F, 0x1F, 0x0D, 0x1A, 0x02, 0x08, 0x3C,
                                  0xE0, 0xF0, 0xF8, 0xF0, 0xF8, 0xF0, 0xF0, 0xFC, 0xE0, 0xF0, 0xF8, 0xB0, 0x58, 0x40, 0x10, 0x3C,
                                  0x7F, 0x7D, 0x1C, 0x3F, 0x38, 0x00, 0x0E, 0x00, 0x0F, 0x0F, 0x1F, 0x3C, 0x3F, 0x0F, 0x0E, 0x00,
                                  0xFE, 0xBF, 0x3B, 0xFF, 0x1C, 0x00, 0x00, 0xF0, 0xFC, 0xF8, 0xF8, 0x3C, 0xFC, 0xF0, 0xF0, 0xF0,
                                  0x0F, 0x1F, 0x1F, 0x1F, 0x0F, 0x0F, 0x0F, 0x07, 0x0F, 0x1F, 0x1F, 0x1B, 0x04, 0x04, 0x00, 0x01,
                                  0xC0, 0xE0, 0xF0, 0xF0, 0xF0, 0xF0, 0xE0, 0xC0, 0xC0, 0xE0, 0xF0, 0xF0, 0xF0, 0x70, 0xE0, 0xC0,
                                  0x1F, 0x13, 0x07, 0x1F, 0x03, 0x00, 0x00, 0x0F, 0x0F, 0x0F, 0x1F, 0x07, 0x1F, 0x0F, 0x0F, 0x0F,
                                  0xE0, 0xF0, 0xF0, 0xF0, 0xF0, 0x00, 0xE0, 0x00, 0x20, 0x10, 0x90, 0x90, 0xF0, 0xE0, 0xE0, 0x00,
                                  0x09, 0x03, 0x07, 0x1F, 0x03, 0x00, 0x0E, 0x01, 0x0F, 0x0C, 0x1C, 0x07, 0x1F, 0x0F, 0x0F, 0x01,
                                  0xE0, 0xF0, 0xF0, 0xF0, 0xF0, 0x00, 0x00, 0xE0, 0x20, 0x30, 0x70, 0xF0, 0xF0, 0xE0, 0xE0, 0xE0 };
            byte[] dw4Dwarf = { 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x3F, 0x1F, 0x00, 0x00, 0x03, 0x07, 0x0F, 0x1F, 0x3F, 0x3F,
                                0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xFC, 0xF8, 0x00, 0x00, 0xC0, 0xE0, 0xF0, 0xF8, 0xFC, 0xFC,
                                0x4F, 0xEB, 0xC2, 0xC0, 0x1C, 0x00, 0x1E, 0x00, 0x3F, 0x1F, 0x1F, 0x1F, 0x3F, 0x3F, 0x1E, 0x00,
                                0xF2, 0xD6, 0x40, 0x00, 0x38, 0x00, 0xF8, 0xF8, 0xFC, 0xF8, 0xF8, 0xF8, 0xFC, 0xFC, 0x00, 0xF8,
                                0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xFC, 0xF8, 0x00, 0x00, 0xC0, 0xE0, 0xF0, 0xF8, 0xFC, 0xFC,
                                0x4F, 0x6B, 0x02, 0x00, 0x1C, 0x00, 0x1F, 0x1F, 0x3F, 0x1F, 0x1F, 0x1F, 0x3F, 0x3F, 0x00, 0x1F,
                                0xF2, 0xD7, 0x43, 0x03, 0x38, 0x00, 0x78, 0x00, 0xFC, 0xF8, 0xF8, 0xF8, 0xFC, 0xFC, 0x78, 0x00,
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x3F, 0x1F, 0x00, 0x01, 0x03, 0x07, 0x0F, 0x1F, 0x3A, 0x32,
                                0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xFC, 0xF8, 0x00, 0x80, 0xC0, 0xE0, 0xF0, 0xF8, 0x5C, 0x4C,
                                0x7F, 0x7F, 0x27, 0x03, 0x19, 0x00, 0x1E, 0x00, 0x0D, 0x0F, 0x1F, 0x1F, 0x3E, 0x3F, 0x1E, 0x00,
                                0xF6, 0xF6, 0xE3, 0xC3, 0x9B, 0x00, 0xF8, 0xF8, 0xB8, 0xF8, 0xF8, 0xF8, 0x7C, 0xFC, 0x00, 0xF8,
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x3F, 0x1F, 0x00, 0x01, 0x03, 0x07, 0x0F, 0x1F, 0x3A, 0x32,
                                0x6F, 0x6F, 0xC7, 0xC3, 0xD9, 0x00, 0x1F, 0x1F, 0x1D, 0x1F, 0x1F, 0x1F, 0x3E, 0x3F, 0x00, 0x1F,
                                0xFE, 0xFE, 0xE4, 0xC0, 0x98, 0x00, 0x78, 0x00, 0xB0, 0xF0, 0xF8, 0xF8, 0x7C, 0xFC, 0x78, 0x00,
                                0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xF0, 0x18, 0x00, 0x00, 0xC0, 0xE0, 0xF0, 0xF0, 0xF0, 0xF8,
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x0F, 0x1F, 0x00, 0x00, 0x07, 0x0F, 0x1F, 0x1F, 0x05, 0x04,
                                0x19, 0x13, 0x11, 0x00, 0x07, 0x00, 0x0F, 0x00, 0x1E, 0x1C, 0x1E, 0x0F, 0x1F, 0x1F, 0x0F, 0x00,
                                0xF8, 0xF8, 0xDC, 0x04, 0xE8, 0x00, 0xF8, 0xF8, 0x98, 0x18, 0x3C, 0xFC, 0xF0, 0xFC, 0x00, 0xF8,
                                0x19, 0x13, 0x13, 0x01, 0x07, 0x00, 0x07, 0x0F, 0x1E, 0x1C, 0x1C, 0x0E, 0x1F, 0x1F, 0x08, 0x0F,
                                0xF8, 0x78, 0x9C, 0x84, 0xE8, 0x00, 0xF8, 0x80, 0xD8, 0xF8, 0x7C, 0x7C, 0xF0, 0xFC, 0x78, 0x80,
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x0F, 0x1F, 0x00, 0x00, 0x07, 0x0F, 0x1F, 0x1F, 0x05, 0x04,
                                0x1F, 0x1F, 0x3B, 0x20, 0x17, 0x00, 0x1F, 0x1F, 0x19, 0x18, 0x3C, 0x3F, 0x0F, 0x3F, 0x00, 0x1F,
                                0x98, 0xC8, 0x88, 0x00, 0xE0, 0x00, 0xF0, 0x00, 0x78, 0x38, 0x78, 0xF0, 0xF8, 0xF8, 0xF0, 0x00,
                                0x1F, 0x1E, 0x39, 0x21, 0x17, 0x00, 0x1F, 0x01, 0x1B, 0x1F, 0x3E, 0x3E, 0x0F, 0x3F, 0x1E, 0x01,
                                0x98, 0xC8, 0xC8, 0x80, 0xE0, 0x00, 0xE0, 0xF0, 0x78, 0x38, 0x38, 0x70, 0xF8, 0xF8, 0x10, 0xF0 };

            Random r2 = new Random(int.Parse(txtSeed));


            // Merchant Randomization
            int spriteChoice = r2.Next() % 5;
            if (spriteChoice == 1)
            {
                for (int lnI = 0; lnI < dw1MerchantSprite.Length; lnI++)
                {
                    romData[0x22ec0 + lnI] = dw1MerchantSprite[lnI];
                }
            }
            else if (spriteChoice == 2)
            {
                for (int lnI = 0; lnI < dw2MerchantSprite.Length; lnI++)
                {
                    romData[0x22ec0 + lnI] = dw2MerchantSprite[lnI];
                }
            }
            else if (spriteChoice == 3)
            {
                for (int lnI = 0; lnI < dw4Taloon.Length; lnI++)
                {
                    romData[0x22ec0 + lnI] = dw4Taloon[lnI];
                }
            }
            else if (spriteChoice == 4)
            {
                for (int lnI = 0; lnI < dw4Merchant.Length; lnI++)
                {
                    romData[0x22ec0 + lnI] = dw4Merchant[lnI];
                }
            }

            // Priest Randomization
            spriteChoice = r2.Next() % 3;
            if (spriteChoice == 1)
            {
                for (int lnI = 0; lnI < dw2PriestJ.Length; lnI++)
                {
                    romData[0x21c20 + lnI] = dw2PriestJ[lnI];
                }
            }
            else if (spriteChoice == 2)
            {
                for (int lnI = 0; lnI < dw2PriestE.Length; lnI++)
                {
                    romData[0x21c20 + lnI] = dw2PriestE[lnI];
                }
            }

            // King Randomization
            spriteChoice = r2.Next() % 2;
            if (spriteChoice == 1)
            {
                for (int lnI = 0; lnI < dw2King.Length; lnI++)
                {
                    romData[0x21f70 + lnI] = dw2King[lnI];
                }
            }

            // Girl Randomization
            spriteChoice = r2.Next() % 4;
            if (spriteChoice == 1)
            {
                for (int lnI = 0; lnI < dw1Girl.Length; lnI++)
                {
                    romData[0x21880 + lnI] = dw1Girl[lnI];
                }
            }
            else if (spriteChoice == 2)
            {
                for (int lnI = 0; lnI < dw2Girl.Length; lnI++)
                {
                    romData[0x21880 + lnI] = dw2Girl[lnI];
                }
            }
            else if (spriteChoice == 3)
            {
                for (int lnI = 0; lnI < dw4Girl.Length; lnI++)
                {
                    romData[0x21880 + lnI] = dw4Girl[lnI];
                }
            }
            // Town Man Randomization
            spriteChoice = r2.Next() % 3;
            if (spriteChoice == 1)
            {
                for (int lnI = 0; lnI < dw4TownMan.Length; lnI++)
                {
                    romData[0x22800 + lnI] = dw4TownMan[lnI];
                }
            }
            // Old Man Randomization
            spriteChoice = r2.Next() % 3;
            if (spriteChoice == 1)
            {
                for (int lnI = 0; lnI < dw1OldMan.Length; lnI++)
                {
                    romData[0x21a80 + lnI] = dw1OldMan[lnI];
                }
            }
            else if (spriteChoice == 2)
            {
                for (int lnI = 0; lnI < dw4OldMan.Length; lnI++)
                {
                    romData[0x21a80 + lnI] = dw4OldMan[lnI];
                }
            }
            // Town Soldier Randomization
            spriteChoice = r2.Next() % 2;
            if (spriteChoice == 1)
            {
                for (int lnI = 0; lnI < dw1SoldierP1.Length; lnI++)
                {
                    romData[0x22940 + lnI] = dw1SoldierP1[lnI];
                }
                for (int lnI = 0; lnI < dw1SoldierP2.Length; lnI++)
                {
                    romData[0x22d10 + lnI] = dw1SoldierP2[lnI];
                }
            }
            // Dwarf Randomization
            spriteChoice = r2.Next() % 3;
            if (spriteChoice == 1)
            {
                for (int lnI = 0; lnI < dw4Dwarf.Length; lnI++)
                {
                    romData[0x23610 + lnI] = dw4Dwarf[lnI];
                }
            }
        }

    }
}
